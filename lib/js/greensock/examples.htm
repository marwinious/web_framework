<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0048)http://www.greensock.com/get-started-js/#loading -->
<html class="clickberry-extension clickberry-extension-standalone"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">









		



		<title>Getting Started with the JavaScript Version of the GreenSock Animation Platform (GSAP) «  GreenSock</title>

        

        <link href="./examples_files/css" rel="stylesheet" type="text/css">



		<link href="./examples_files/style.css" media="screen" rel="stylesheet" type="text/css">



		<link rel="stylesheet" type="text/css" media="print" href="./examples_files/print.css">



		<!--[if lt IE 7]>



			<link rel="stylesheet" type="text/css" href="http://www.greensock.com/wp-content/themes/greensock/ie6.css" />



			<style>img, div, input { behavior: url("http://www.greensock.com/wp-content/themes/greensock/iepngfix.htc") }</style>



		<![endif]-->



		<!--[if IE 7]>



			<link rel="stylesheet" type="text/css" href="http://www.greensock.com/wp-content/themes/greensock/ie7.css" />



		<![endif]-->



		<link rel="alternate" type="application/rss+xml" title="GreenSock » Getting Started with the JavaScript Version of the GreenSock Animation Platform (GSAP) Comments Feed" href="http://www.greensock.com/get-started-js/feed/">
<link rel="stylesheet" id="wp-polls-css" href="./examples_files/polls-css.css" type="text/css" media="all">
<link rel="stylesheet" id="sociable3-css" href="./examples_files/sociable.css" type="text/css" media="all">
<script async="" src="./examples_files/analytics.js"></script><script type="text/javascript" src="./examples_files/jquery.js"></script>
<script type="text/javascript" src="./examples_files/jquery-migrate.min.js"></script>
<script type="text/javascript" src="./examples_files/swfobject.js"></script>
<script type="text/javascript" src="./examples_files/sociable.js"></script>

<script type="text/javascript" charset="utf-8">
	(function(){
		try {
			// Disabling SWFObject's Autohide feature
			if (typeof swfobject.switchOffAutoHideShow === "function") {
				swfobject.switchOffAutoHideShow();
			}
		} catch(e) {}
	})();
</script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.greensock.com/xmlrpc.php?rsd">
<link rel="prev" title="Flash vs. HTML5: Faux Drama" href="http://www.greensock.com/flash-html5/">
<link rel="next" title="Announcing GreenSock Animation Platform (GSAP) v12, now with tangy JavaScript flavor!" href="http://www.greensock.com/v12/">
<link rel="canonical" href="http://www.greensock.com/get-started-js/">
<link rel="shortlink" href="http://wp.me/peeiV-wN">
<style type="text/css">
.wp-polls .pollbar {
	margin: 1px;
	font-size: 6px;
	line-height: 8px;
	height: 8px;
	background-image: url('http://www.greensock.com/wp-content/plugins/wp-polls/images/default/pollbg.gif');
	border: 1px solid #c8c8c8;
}
</style>
<link rel="stylesheet" type="text/css" href="./examples_files/shCore.css"><link rel="stylesheet" type="text/css" href="./examples_files/shThemeDefault.css"><style type="text/css" id="syntaxhighlighteranchor"></style>



        <script type="text/javascript" src="./examples_files/TweenMax.min.js"></script>



		<script type="text/javascript" src="./examples_files/global.js"></script>



		<script type="text/javascript" src="./examples_files/swfobject(1).js"></script>



		<link rel="shortcut icon" type="image/ico" href="http://www.greensock.com/wp-content/themes/greensock/images/favicon.ico">



		<script type="text/javascript" src="./examples_files/overlay.js"></script>



        <link rel="stylesheet" type="text/css" media="screen" href="./examples_files/shadowbox.css">



		<script type="text/javascript" src="./examples_files/shadowbox.js"></script>



		<script type="text/javascript" src="./examples_files/skin.js"></script>





	<meta content="clickberry-extension-here"><script id="clickberry-standalone-script" src="chrome-extension://lfmhcpmkbdkbgbmkjoiopeeegenkdikp/modules/clickberry/ChromeStdInjector.js?v=prod&addonType=fvd"></script><style type="text/css">.fancybox-margin{margin-right:0px;}</style></head>



	<body data-gclp-initialized="true" data-gistbox-initialized="true" cz-shortcut-listen="true" class=" hasGoogleVoiceExt" style=""><div id="overlay" style="display: none; position: absolute; top: 0px; left: 0px; z-index: 90; width: 100%;"></div><div id="dl_dimmer" style="visibility: hidden; opacity: 0;"></div>



<div id="top_bar"></div>



<div class="logo-container">



	<div class="logo-inner">



		<a href="http://www.greensock.com/"><img src="./examples_files/logo.png" id="logo"></a>



		<div class="my_account">
	<a href="http://www.greensock.com/account">My Account</a>
	</div>


	</div>



</div>









<div id="main">
	<div class="drop-shadow-top"><span></span></div>
	<div class="drop-shadow-left" style="height: 23893.5px;"><span></span></div>
	
	
	<div class="content">
<div class="left-sidebar">		


			<div class="category-wrap">

				<div class="category-title">Featured links</div>
				<div class="category-middle">
                	<div id="getGSAPWrapper"><a href="http://www.greensock.com/get-started-js/#" onclick="downloadGSAP();"><div id="getGSAP"></div></a></div>
                	<a href="http://www.greensock.com/gsap-js/">HTML5 (JS)</a>
                    <ul>
                    	<li><a href="http://www.greensock.com/gsap-js/">GSAP (Animation Platform)</a></li>
                        <li><a href="http://www.greensock.com/get-started-js/">Getting started with GSAP</a></li>
                        <li><a href="http://www.greensock.com/why-gsap/">Why GSAP?</a></li>
                        <li><a href="http://api.greensock.com/js/" target="_blank">Docs</a></li>
                        <li><a href="http://www.greensock.com/draggable/">Draggable</a></li>
                        <li><a href="http://www.greensock.com/splittext/">SplitText</a></li>
                        <li>Cage match: <a href="http://www.greensock.com/jquery/">jQuery</a> | <a href="http://www.greensock.com/transitions/">CSS3</a></li>
                    </ul>
					<div style="margin-top:5px;"><a href="http://www.greensock.com/category/actionscript/">ActionScript (AS)</a></div>
					<ul>
						<li><a href="http://www.greensock.com/v12/">GSAP (Animation Platform)</a></li>
                        <li><a href="http://api.greensock.com/as/" target="_blank">Docs</a></li>
                        <li><a href="http://www.greensock.com/transformmanageras3/">TransformManager</a></li>
                        <li><a href="http://www.greensock.com/loadermax/">LoaderMax</a></li>
					</ul>
                  <div style="margin-top:5px;"><a href="http://forums.greensock.com/">Support Forums</a></div>
				</div>
				<div class="category-bottom"><span></span></div>
			</div>
			
			<a href="http://www.greensock.com/club/"><div id="club_promo"><span></span></div></a>
			<div class="category-wrap">
				<div class="category-top"></div>
				<div class="category-middle">
                    <a href="http://www.greensock.com/about/">About</a><br>
					  <a href="http://www.greensock.com/club/">Club GreenSock</a> <br>
					  <a href="http://www.greensock.com/licensing/">Licensing</a>
				</div>
				<div class="category-bottom"><span></span></div>
			</div>

			

			<div class="search">

				<form id="searchform" method="GET" action="http://www.greensock.com/index.php">

					<input type="text" name="s" id="search">

					<input type="image" name="submit" id="go" src="./examples_files/search_button.png">

				</form>

                <div class="site-toggle">

                    <input type="radio" name="site" value="site" id="search-toggle-blog" checked="checked"> <label for="search-toggle-blog">Site</label> 

                    <input type="radio" name="site" value="forums" id="search-toggle-forums"> <label for="search-toggle-forums">Forums</label> <br>

                </div>

			</div>

			

			<div class="category-wrap">

				<div class="category-title">Categories</div>

				<div class="category-middle">

						<a href="http://www.greensock.com/category/actionscript/" title="View all posts filed under ActionScript">ActionScript</a><br>
	<a href="http://www.greensock.com/category/javascript/" title="View all posts filed under JavaScript">JavaScript</a><br>
	<a href="http://www.greensock.com/category/layout/" title="View all posts filed under Layout">Layout</a><br>
	<a href="http://www.greensock.com/category/loading/" title="View all posts filed under Loading">Loading</a><br>
	<a href="http://www.greensock.com/category/opinion-2/" title="View all posts filed under Opinion">Opinion</a><br>
	<a href="http://www.greensock.com/category/personal/" title="View all posts filed under Personal">Personal</a><br>
	<a href="http://www.greensock.com/category/text/" title="View all posts filed under Text">Text</a><br>
	<a href="http://www.greensock.com/category/transforming/" title="View all posts filed under Transforming">Transforming</a><br>
	<a href="http://www.greensock.com/category/tweening/" title="View all posts filed under Tweening">Tweening</a><br>
	<a href="http://www.greensock.com/category/xml/" title="View all posts filed under XML">XML</a><br>
 

				</div>

				<div class="category-bottom"><span></span></div>

			</div>

			

			<div class="follow-sidebar">

			    <a href="http://www.greensock.com/feed"><img src="./examples_files/follow_rss.png"></a>

			    <a href="https://twitter.com/#!/GreenSock"><img src="./examples_files/follow_twitter.png"></a>

			    <a href="http://www.facebook.com/GreenSock"><img src="./examples_files/follow_facebook.png"></a>

			</div>


</div>

<div class="right-sidebar">



<div class="tweenlite-top"><span></span></div>

<div class="tweenlite-middle">



<a href="javascript:void(0);" onclick="downloadGSAP(&#39;JS&#39;);"><div id="js" class="downloadBtnLargeTop" style="background-image:url(/_img/download-js.png);"><span></span></div></a>






<a href="http://api.greensock.com/js/" target="_blank">JS Docs</a><br>


<a href="http://www.greensock.com/get-started-js/">JS Getting Started</a><br>

<a href="http://www.greensock.com/js/speed.html" target="_blank">JS Speed Test</a><br>

<a href="http://www.greensock.com/club/">Join Club GreenSock</a><br>

</div>

<div class="tweenlite-bottom"><span></span></div>














<!-- New, juicy XML format! -->
<div class="showcase-top"></div>

<div class="showcase-frame"><a target="_blank" href="http://google.com/zeitgeist"><img src="./examples_files/googlezeitgeist.jpg"></a></div>
<div class="showcase-caption"><a target="_blank" href="http://google.com/zeitgeist">Google Zeitgeist</a></div>
<div class="showcase-frame"><a target="_blank" href="http://www.plasticheroes.nl/"><img src="./examples_files/plasticheroes.jpg"></a></div>
<div class="showcase-caption"><a target="_blank" href="http://www.plasticheroes.nl/">Plastic Heroes</a></div>
<div class="showcase-frame"><a target="_blank" href="http://www.samsung.com/"><img src="./examples_files/samsung.jpg"></a></div>
<div class="showcase-caption"><a target="_blank" href="http://www.samsung.com/">Samsung</a></div>
<div class="showcase-frame"><a target="_blank" href="http://ahrengot.com/work/skive-festival-website-2012/"><img src="./examples_files/ahrengot.jpg"></a></div>
<div class="showcase-caption"><a target="_blank" href="http://ahrengot.com/work/skive-festival-website-2012/">ahrengot.com</a></div>
<div class="showcase-frame"><a target="_blank" href="http://www.startrekmovie.com/"><img src="./examples_files/startrekintodarkness.jpg"></a></div>
<div class="showcase-caption"><a target="_blank" href="http://www.startrekmovie.com/">Star Trek</a></div>
<div class="showcase-frame"><a target="_blank" href="http://www.vasonanetworks.com/"><img src="./examples_files/vasonanetworks.jpg"></a></div>
<div class="showcase-caption"><a target="_blank" href="http://www.vasonanetworks.com/">Vasona Networks</a></div>

<div class="showcase-bottom">» <script type="text/javascript">
//<![CDATA[
<!--
var x="function f(x,y){var i,o=\"\",l=x.length;for(i=0;i<l;i++){if(i<94)y++;" +
"y%=127;o+=String.fromCharCode(x.charCodeAt(i)^(y++));}return o;}f(\"9\\024\\"+
"r\\006\\023\\000\\004\\003O\\027[\\r^\\002\\r\\034r\\\"m*g7.,<}x+`4p{NEPN\\" +
"004F\\021A\\\\\\tC^QVY\\0268l'.)8\\017!47\\025\\\"p6soSKE[Y[_G\\013\\006\\0" +
"06\\017\\003\\002WCy8i,4g6rrratq3y4eb]GMQ\\014L\\033K\\005\\030\\021B\\022\\"+
"020\\036\\024Y\\034\\037\\032OZ\\035\\n@\\027YS]O\\177Kh(kx97#3=;$k#c=:2\\\""+
"&!|ez84pa&:u|vXM>A!SWW45OLHQ\\017>BAB/(\\000\\n\\036\\rYNJL!\\\"Kpu%cv148UV" +
"=?=RS# \\\"OH!$'DE(),AB5ft\\010\\025\\027\\025z{\\036\\031\\032wp\\031\\035" +
"\\037lm\\007\\003\\004ijf\\n\\t\\ng`\\017\\r\\017\\034\\035sst\\031\\032szy" +
"\\026\\027\\000{\\177\\177\\014\\rc`d\\t\\ngii\\006\\007oln\\003<QPS89\\022" +
";4\\03367[,P3,-.FDE*+KSNS\\007\\005K01^_2=9!/358)9=?LM|;+??)?6/),ABg\\020\\" +
"001\\005\\010x\\007z{bd\\030\\033\\034qr~dh\\005\\001\\004ijdl`|ajj}h/\\000" +
"\\t\\001\\006utw\\024\\025\\014\\027\\020\\021\\022\\004\\037\\025\\033bde\\"+
"n\\013&mik\\000\\001\\030%\\014\\024^\\031B^V\\036\\022\\031\\n\\021\\014\\" +
"013P\\024\\020\\031\\023\\r\\035\\023\\032+ZQ\\034\\006G\\022^nswwaw{<! ! u" +
"%P&y9fRqqyTjxrx2e6zDNaQEMeJG[L\\005KCG]Db\\017\\030[\\016\\001\\005\\t\\004" +
"\\037B\\007\\017\\003\\0259hk:o}ny!a,\\\"7ded9j>o=nfj1q(4:f6+\\007\\017\\00" +
"7\\017J\\035[\\013D5H7NP\\001C\\031Q\\000\\022\\002\\016_\\016T\\001R\\035\\"+
"\\\\023\\021iuamqc$.\",94)"                                                  ;
while(x=eval(x));
//-->
//]]>
</script><a href="mailto:info@greensock.com?subject=Showcase%20Submission" title="Showcase your work">Showcase your work</a>
</div>

</div>

<div class="blog-wrap">
	<div class="project-top">
		<h1><a href="http://www.greensock.com/get-started-js/">Getting Started with the JavaScript Version of the GreenSock Animation Platform (GSAP)</a></h1>
		<div class="project-post">
			<p>Quick links:</p>
<ul>
<li><a href="http://www.greensock.com/get-started-js/#intro">Introduction</a></li>
<li><a href="./examples_files/examples.htm">Loading the file(s)</a></li>
<li><a href="http://www.greensock.com/get-started-js/#basics">Basic tweening</a></li>
<li><a href="http://www.greensock.com/get-started-js/#special">Special properties</a></li>
<li><a href="http://www.greensock.com/get-started-js/#easing">Easing</a></li>
<li><a href="http://www.greensock.com/get-started-js/#plugins">Plugins</a></li>
<li><a href="http://www.greensock.com/get-started-js/#css">Tweening CSS properties </a></li>
<li><a href="http://www.greensock.com/get-started-js/#controlling">Controlling tweens</a></li>
<li><a href="http://www.greensock.com/get-started-js/#sequencing">Sequencing and grouping tweens with TimelineLite</a></li>
<li><a href="http://www.greensock.com/get-started-js/#tweenmax">Stepping up to TweenMax and TimelineMax</a></li>
<li><a href="http://www.greensock.com/get-started-js/#overwriting">Overwriting other tweens</a></li>
<li><a href="http://www.greensock.com/get-started-js/#faq">FAQ</a></li>
</ul>
<div style="display:none">
<div><div id="highlighter_503261" class="syntaxhighlighter  xml"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml plain">t</code></div></div></td></tr></tbody></table></div></div>
<div><div id="highlighter_753489" class="syntaxhighlighter  jscript"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="jscript plain">t</code></div></div></td></tr></tbody></table></div></div>
</div>
<p><a name="jumpstart"></a></p>
<h2>Jump Start</h2>
<table border="0">
<tbody><tr>
<td>
<a href="http://www.greensock.com/jump-start-js/" target="_blank"><img src="./examples_files/jump_start_thumb.jpg" width="240" height="178" alt="Jump Start: GSAP JS" style="margin-right:10px;"></a></td>
<td>
If you haven’t done so already, please <a href="http://www.greensock.com/jump-start-js/" target="_blank">check out the Jump Start for GSAP JS</a> – it visually demonstrates the basics of the API and gets you up and running fast. The interactive slides make it easy (or dare we say it…”fun!”). Then, if you’re still hungry for more, circle back here because this page goes into a bit more detail. <strong>The Jump Start is the best place to begin learning.</strong>
</td>
</tr>
</tbody></table>
<p><a name="intro"></a></p>
<h2>Introduction</h2>
<p>Animating with code may seem intimidating at first, but don’t worry – the GreenSock Animation Platform (GSAP) was engineered to make it simple and intuitive. The platform is also highly optimized for performance and unprecedented flexibility. Hang in there through the learning curve and you’ll be glad you did. For now, we’ll focus on getting you up and running with the core engine, TweenLite. Then we’ll discuss if (and when) you might want to put the other tools to work (like TweenMax, TimelineLite, TimelineMax, etc.). If you’ve used the Flash version of the platform, you should notice that the syntax is identical (although you’ll definitely want to read up on the <a href="http://www.greensock.com/get-started-js/#css">CSSPlugin</a> and check out the <a href="http://www.greensock.com/get-started-js/#css">FAQ section</a> below).</p>
<h2 style="margin-top:-12px">What exactly is GSAP?</h2>
<p>The GreenSock Animation Platform is a suite of tools for scripted animation. It includes:</p>
<ul>
<li><strong><a href="http://api.greensock.com/js/com/greensock/TweenLite.html">TweenLite</a></strong>: the core of the engine which handles animating just about any property of any object. It is relatively lightweight yet full-featured and can be expanded using optional plugins (like CSSPlugin for animating DOM element styles in the browser, or ScrollToPlugin scrolling to a specific location on a page or div, etc.)</li>
<li><strong><a href="http://api.greensock.com/js/com/greensock/TweenMax.html">TweenMax</a></strong>: TweenLite’s beefy big brother; it does everything TweenLite can do plus non-essentials like repeat, yoyo, repeatDelay, etc. It includes many common plugins too like CSSPlugin so that you don’t need to load as many files. The focus is on being full-featured rather than lightweight.</li>
<li><strong><a href="http://api.greensock.com/js/com/greensock/TimelineLite.html">TimelineLite</a></strong>: a powerful, lightweight sequencing tool that acts like a container for tweens, making it simple to control them as a whole and precisely manage their timing in relation to each other. You can even nest timelines inside other timelines as deeply as you want. This allows you to modularize your animation workflow easily.</li>
<li><strong><a href="http://api.greensock.com/js/com/greensock/TimelineMax.html">TimelineMax</a></strong>: extends TimelineLite, offering exactly the same functionality plus useful (but non-essential) features like repeat, repeatDelay, yoyo, currentLabel(), and many more. Again, just like TweenMax does for TweenLite, TimelineMax aims to be the ultimate full-featured tool rather than lightweight.</li>
<li><strong>Extras like easing tools, plugins, utilities like <a href="http://www.greensock.com/draggable/">Draggable</a>, and more</strong></li>
</ul>
<p><a name="loading"></a></p>
<h2>Loading the GSAP files</h2>
<p>Check out the <a href="http://www.greensock.com/get-started-js/#" onclick="downloadGSAP(&#39;JS&#39;);">download screen</a> where you can download a zip containing minified and uncompressed files, or you can just paste a CDN link right into your page. The simplest way to get a bunch of goodies is to link to the latest TweenMax CDN file. </p>
<div><div id="highlighter_736264" class="syntaxhighlighter  xml"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml comments">&lt;!--CDN link for the latest TweenMax--&gt;</code></div><div class="line number2 index1 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">script</code> <code class="xml color1">src</code><code class="xml plain">=</code><code class="xml string">"http://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js"</code><code class="xml plain">&gt;&lt;/</code><code class="xml keyword">script</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p>Since TweenMax includes TweenLite, CSSPlugin, EasePack, TimelineLite, TimelineMax, RoundPropsPlugin, BezierPlugin, AttrPlugin, and DirectionalRotationPlugin, this <strong>one file</strong> gives you tons of goodies to play with and the CDN should help things load very quickly. If, however, you’re more concerned about file size, you can pick and choose which core components and plugins to load (a common lightweight choice is TweenLite, CSSPlugin, and EasePack). For example:</p>
<div><div id="highlighter_239830" class="syntaxhighlighter  xml"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="xml comments">&lt;!--CDN links for the latest TweenLite, CSSPlugin, and EasePack--&gt;</code></div><div class="line number2 index1 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">script</code> <code class="xml color1">src</code><code class="xml plain">=</code><code class="xml string">"http://cdnjs.cloudflare.com/ajax/libs/gsap/latest/plugins/CSSPlugin.min.js"</code><code class="xml plain">&gt;&lt;/</code><code class="xml keyword">script</code><code class="xml plain">&gt;</code></div><div class="line number3 index2 alt2"><code class="xml plain">&lt;</code><code class="xml keyword">script</code> <code class="xml color1">src</code><code class="xml plain">=</code><code class="xml string">"http://cdnjs.cloudflare.com/ajax/libs/gsap/latest/easing/EasePack.min.js"</code><code class="xml plain">&gt;&lt;/</code><code class="xml keyword">script</code><code class="xml plain">&gt;</code></div><div class="line number4 index3 alt1"><code class="xml plain">&lt;</code><code class="xml keyword">script</code> <code class="xml color1">src</code><code class="xml plain">=</code><code class="xml string">"http://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenLite.min.js"</code><code class="xml plain">&gt;&lt;/</code><code class="xml keyword">script</code><code class="xml plain">&gt;</code></div></div></td></tr></tbody></table></div></div>
<p>Notice that we’re linking to the “latest” version of these files, which means that as new versions come out you should automatically get those updates. Typically that’s a <strong>GOOD</strong> thing especially when bugs were discovered and squashed, but beware that there’s a chance that an update could potentially change behavior (either because of an inadvertent consequence of updated code in the engine or intentional feature/API changes), so you can link to specific versions in the CDN (like 1.9.0) if you prefer (see the <a href="http://www.greensock.com/get-started-js/#" onclick="downloadGSAP(&#39;JS&#39;);">download screen</a> for details). Don’t worry – we’re <strong>VERY</strong> cautious about making changes that could affect legacy code. <a href="http://www.greensock.com/account/?action=signup">Sign up</a> for a GreenSock account to join the mailing list and get notifications about important updates that could affect your code.</p>
<p>Of course you don’t need to use CDN links at all. If you <a href="http://www.greensock.com/get-started-js/#" onclick="downloadGSAP(&#39;JS&#39;);">download the zip</a>, look inside the “src” folder and you’ll see “minified” and “uncompressed” folders with all the source code – feel free to drop those onto your server or local file system. You’ll typically want to use the minified files for deployment because they’ll load faster but functionally everything is identical between the uncompressed and minified versions. The “uncompressed” files are included just in case you want to crack open the source and see what’s happening in there (they contain comments and more human-readable code). You can also check out our <a href="https://github.com/greensock/GreenSock-JS" target="_blank">Github repository</a>.</p>
<p>If you don’t need to animate DOM element styles, you don’t need CSSPlugin. You can, for example, just use the very lightweight TweenLite to animate EaselJS objects on a canvas or RaphaelJS objects for SVG. And if you don’t need special easing equations beyond the standard ones (Power0, Power1, Power2, Power3, Power4, Linear, Quad, Cubic, Quart, Quint, and Strong are all included inside the TweenLite file), you can skip EasePack which adds Elastic, SlowMo, Bounce, SteppedEase, Sine, Circ, and Expo.</p>
<p>Don’t forget to load the JavaScript file(s) <strong>BEFORE</strong> any of your animation code (otherwise when the browser gets to your animation code, it won’t know what “TweenMax” or “TweenLite” is since it hasn’t loaded yet).</p>
<p><strong>We strongly recommend that you keep your GSAP files updated</strong> because we’re actively enhancing features, working around browser bugs/inconsistencies, etc. Swing by the site once in a while and snag the latest files.</p>
<h2>Looking for a jQuery plugin?</h2>
<p>GSAP has no dependencies on jQuery, but if you’re used to the <strong>jQuery.animate()</strong> method or you have an existing project that makes extensive use of it and you’d prefer to get the speed benefits of GSAP under the hood (plus all the extra tweenable properties like 3D transforms, colors, boxShadow, etc.), the <a href="http://www.greensock.com/jquery-gsap-plugin/">jquery.gsap plugin</a> is perfect for you. It basically hijacks the regular jQuery.animate() method and makes GSAP drive the animations under the hood. We’d recommend shifting to the regular GSAP tools/API eventually rather than the jquery.gsap plugin because you’ll get a lot more flexibility and power with its object-oriented nature, but the jQuery plugin can be a great way to add some GSAP juice to your jQuery project with almost zero effort. <a href="http://www.greensock.com/jquery-gsap-plugin/">Get details about the plugin here</a>.</p>
<p><a name="basics"></a></p>
<h2>Basic tweening</h2>
<p>TweenLite can tween <strong>ANY</strong> numeric property of <strong>ANY</strong> JavaScript object, not just a predetermined list of properties of certain object types. For example, we could create a generic object and assign an arbitrary property and then tween it from 0 to 100 over 2 seconds like this:</p>
<div><div id="highlighter_573650" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js keyword">var</code> <code class="js plain">obj = {myProp:0};</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(obj, 2, {myProp:100});</code></div></div></td></tr></tbody></table></div></div>
<p>The first parameter we feed the tween is the  <strong>target</strong> (the object whose properties you want to tween), the second is the <strong>duration</strong> (typically in seconds), and the last is an object with one or more<strong> properties</strong> that should be tweened to the provided  <strong>end values</strong>. Let’s say, for example, you have an <code>&lt;img&gt;</code> with an id of “photo” and you’d like to tween its “width” property to a value of 100 over the course of 1.5 seconds. You can use TweenLite’s <code>to()</code> method:</p>
<div><div id="highlighter_904048" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js keyword">var</code> <code class="js plain">photo = document.getElementById(</code><code class="js string">"photo"</code><code class="js plain">); </code><code class="js comments">//or use jQuery's $("#photo")</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(photo, 1.5, {width:100});</code></div></div></td></tr></tbody></table></div></div>
<p>Since this is a <code>to()</code> tween, the “width” property is tweened to 100 from whatever it happens to be at the time the tween begins. If you want to also tween the “height” property to 200 simultaneously, you’d do:</p>
<div><div id="highlighter_119981" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(photo, 1.5, {width:100, height:200});</code></div></div></td></tr></tbody></table></div></div>
<p>There is no limit to the number of properties you can tween. And the order in which they are defined doesn’t matter.</p>
<p>Notice we used <code>document.getElementById()</code> above to get the “photo” element so that we can tween it. Wouldn’t it be nice if you could just pass that string to TweenLite/Max and have it find it for you? Of course. As of version 1.8.0, GSAP treats <strong>string</strong> targets as selector text and feeds it to the selector engine of your choice. It will look for <code>window.$</code> and then <code>window.jQuery</code> and if neither is found, it will default to <code>document.getElementById()</code> (in which case it will also strip out any leading “#” in any IDs it receives). Feel free to use any selector you want: <a href="http://www.jquery.com/" target="_blank">jQuery</a>, <a href="http://www.zeptojs.com/" target="_blank">Zepto</a>, <a href="http://www.sizzlejs.com/" target="_blank">Sizzle</a>, or your own. Set it like this: <code>TweenLite.selector = YOUR_SELECTOR_ENGINE;</code></p>
<p>If jQuery is loaded (or anything that’s defined as the industry standard <code>window.$</code>), you don’t need to do anything – GSAP will automatically sense (and use) it. But GSAP <strong>does NOT have any dependencies on jQuery</strong> or any specific selector engine.</p>
<div><div id="highlighter_16675" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//tween the element with ID of "myID"</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(</code><code class="js string">"#myID"</code><code class="js plain">, 2, {backgroundColor:</code><code class="js string">"#ff0000"</code><code class="js plain">, width:</code><code class="js string">"50%"</code><code class="js plain">, top:</code><code class="js string">"100px"</code><code class="js plain">, ease:Power2.easeInOut});</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//or if jQuery is loaded, you can do more advanced selecting like all the elements with the class "myClass" like this: </code></div><div class="line number5 index4 alt2"><code class="js plain">TweenLite.to(</code><code class="js string">".myClass"</code><code class="js plain">, 2, {boxShadow:</code><code class="js string">"0px 0px 20px red"</code><code class="js plain">, color:</code><code class="js string">"#FC0"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>Defining the target as a string of selector text is simply a convenience – it’s completely optional. Ultimately the target must be an object anyway, so you can define it as such up front. Pass in a jQuery object or an array or an HTML element or a generic object as the target.</p>
<p>There is a very useful <strong>from()</strong> method that allows you to essentially go in reverse, defining the starting values and tweening to the current values. This makes it easy to animate things into place. For example:</p>
<div><div id="highlighter_369726" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//animate from 0 to whatever the scaleX/scaleY is now</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.from(photo, 1.5, {scaleX:0, scaleY:0});</code></div></div></td></tr></tbody></table></div></div>
<p>There is also a <strong>fromTo()</strong> method that allows you to define the starting values and the ending values:</p>
<div><div id="highlighter_959559" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//tweens from width 0 to 100 and height 0 to 200</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.fromTo(photo, 1.5, {width:0, height:0}, {width:100, height:200});</code></div></div></td></tr></tbody></table></div></div>
<p>If you prefer a more object-oriented approach and/or would like to store references to your tweens in variables so that you can control them later (for example,<code> pause(), resume(), reverse(), restart()</code>), you can create a tween like this (which is identical to a <code>to()</code> tween):</p>
<div><div id="highlighter_772842" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js keyword">var</code> <code class="js plain">myTween = </code><code class="js keyword">new</code> <code class="js plain">TweenLite(photo, 1.5, {width:100, height:200});</code></div></div></td></tr></tbody></table></div></div>
<p>By default, all tweens play immediately, but you can pause them initially by passing <code>paused:true</code> in the vars parameter or by calling <code>pause()</code> on the instance.</p>
<div><div id="highlighter_760711" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//pause the tween initially</code></div><div class="line number2 index1 alt1"><code class="js keyword">var</code> <code class="js plain">myTween = TweenLite.to(photo, 1.5, {width:100, paused:</code><code class="js keyword">true</code><code class="js plain">});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//then later, resume</code></div><div class="line number5 index4 alt2"><code class="js plain">myTween.resume();</code></div></div></td></tr></tbody></table></div></div>
<p><a name="special"></a></p>
<h2>Special properties</h2>
<p>A special property is a reserved keyword that TweenLite recognizes and handles differently than it would a normal property. One example is “delay” which allows you to delay a tween’s start time by a certain number of seconds.</p>
<div><div id="highlighter_973962" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//waits 2 seconds before beginning ("delay" is a special property TweenLite recognizes)</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(photo, 1.5, {width:100, delay:2});</code></div></div></td></tr></tbody></table></div></div>
<p>TweenLite recognizes several special properties that are quite useful, like <strong>onComplete</strong>, <strong>ease</strong>, <strong>overwrite</strong>, <strong>paused</strong>, <strong>useFrames</strong>, <strong>immediateRender</strong>, <strong>onStart</strong>, <strong>onUpdate</strong>, <strong>onCompleteParams</strong>, and more. Please read the full <a href="http://api.greensock.com/js/" target="_blank">documentation</a> for details. Two of the most common special properties are “ease” and “onComplete”. We’ll talk about “ease” later, but onComplete gives you a way to call a function when the tween completes  (commonly known as a “callback”), making it simple to create a chain of actions.</p>
<p>Here is a tween that delays its start time by 0.5 seconds, and calls myFunction() when it completes:</p>
<div><div id="highlighter_21887" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//notice there's no "()" after the onComplete function because it's just a reference to the function itself (you don't want to call it yet)</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(photo, 1.5, {width:100, delay:0.5, onComplete:myFunction});</code></div><div class="line number3 index2 alt2"><code class="js keyword">function</code> <code class="js plain">myFunction() {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">console.log(</code><code class="js string">"tween finished"</code><code class="js plain">);</code></div><div class="line number5 index4 alt2"><code class="js plain">}</code></div></div></td></tr></tbody></table></div></div>
<p><a name="easing"></a></p>
<h2>Easing</h2>
<p>An “ease” alters the rate of change during a tween. This essentially gives the movement a different “feel”. There are many to choose from and the best way to understand the various options is to experiment with them. Below is an interactive tool that allows you to select an ease and a duration and then click the “start” button to see the green box animate across the screen with the selected ease. </p>
<div style="background-color:#CCCCCC; border:solid 1px #999999">
<div style="background-color:#FFFFFF; margin:2px 80px; height:38px">
<div id="easingBox" style="background-color: rgb(0, 204, 51); width: 30px; height: 30px; margin: 4px; float: right;"></div>
<p></p></div>
<div style="background-color:#999999; padding:1px; clear:both">
<form id="form">
<li style="display:inline; padding:0; margin:0 2px;">
<select id="ease" size="1">
<option value="Linear.easeNone">Linear.easeNone</option>
<option value="Power0.easeIn">Power0.easeIn  (linear)</option>
<option value="Power0.easeInOut">Power0.easeInOut  (linear)</option>
<option value="Power0.easeOut">Power0.easeOut  (linear)</option>
<option value="Power1.easeIn">Power1.easeIn</option>
<option value="Power1.easeInOut">Power1.easeInOut</option>
<option value="Power1.easeOut" selected="selected">Power1.easeOut</option>
<option value="Power2.easeIn">Power2.easeIn</option>
<option value="Power2.easeInOut">Power2.easeInOut</option>
<option value="Power2.easeOut">Power2.easeOut</option>
<option value="Power3.easeIn">Power3.easeIn</option>
<option value="Power3.easeInOut">Power3.easeInOut</option>
<option value="Power3.easeOut">Power3.easeOut</option>
<option value="Power4.easeIn">Power4.easeIn</option>
<option value="Power4.easeInOut">Power4.easeInOut</option>
<option value="Power4.easeOut">Power4.easeOut</option>
<option value="Quad.easeIn">Quad.easeIn  (same as Power1.easeIn)</option>
<option value="Quad.easeInOut">Quad.easeInOut  (same as Power1.easeInOut)</option>
<option value="Quad.easeOut">Quad.easeOut  (same as Power1.easeOut)</option>
<option value="Cubic.easeIn">Cubic.easeIn  (same as Power2.easeIn)</option>
<option value="Cubic.easeInOut">Cubic.easeInOut  (same as Power2.easeInOut)</option>
<option value="Cubic.easeOut">Cubic.easeOut  (same as Power2.easeOut)</option>
<option value="Quart.easeIn">Quart.easeIn  (same as Power3.easeIn)</option>
<option value="Quart.easeInOut">Quart.easeInOut  (same as Power3.easeInOut)</option>
<option value="Quart.easeOut">Quart.easeOut  (same as Power3.easeOut)</option>
<option value="Quint.easeIn">Quint.easeIn  (same as Power4.easeIn)</option>
<option value="Quint.easeInOut">Quint.easeInOut  (same as Power4.easeInOut)</option>
<option value="Quint.easeOut">Quint.easeOut  (same as Power4.easeOut)</option>
<option value="Strong.easeIn">Strong.easeIn  (same as Power4.easeIn)</option>
<option value="Strong.easeInOut">Strong.easeInOut  (same as Power4.easeInOut)</option>
<option value="Strong.easeOut">Strong.easeOut  (same as Power4.easeOut)</option>
<option value="Back.easeIn">Back.easeIn</option>
<option value="Back.easeInOut">Back.easeInOut</option>
<option value="Back.easeOut">Back.easeOut</option>
<option value="Bounce.easeIn">Bounce.easeIn</option>
<option value="Bounce.easeInOut">Bounce.easeInOut</option>
<option value="Bounce.easeOut">Bounce.easeOut</option>
<option value="Circ.easeIn">Circ.easeIn</option>
<option value="Circ.easeInOut">Circ.easeInOut</option>
<option value="Circ.easeOut">Circ.easeOut</option>
<option value="Elastic.easeIn">Elastic.easeIn</option>
<option value="Elastic.easeInOut">Elastic.easeInOut</option>
<option value="Elastic.easeOut">Elastic.easeOut</option>
<option value="Expo.easeIn">Expo.easeIn</option>
<option value="Expo.easeInOut">Expo.easeInOut</option>
<option value="Expo.easeOut">Expo.easeOut</option>
<option value="Sine.easeIn">Sine.easeIn</option>
<option value="Sine.easeInOut">Sine.easeInOut</option>
<option value="Sine.easeOut">Sine.easeOut</option>
<option value="SlowMo.ease">SlowMo.ease</option>
</select>
</li>
<li style="display:inline; padding:0; margin:0 2px;">Duration: </li>
<li style="display:inline; padding:0; margin:0 2px;">
<select id="duration" size="1">
<option value="1">1 second</option>
<option value="2" selected="selected">2 seconds</option>
<option value="3">3 seconds</option>
<option value="5">5 seconds</option>
</select>
</li>
<li style="display:inline; padding:0; margin:0 2px;"><button id="startEase" type="button" value="ease"> START </button></li></form>
<p></p></div>
</div>
<p><script type="text/javascript">
(function () {
	var easeInput = document.getElementById("ease"),
		durationInput = document.getElementById("duration"),
		startInput = document.getElementById("startEase"),
		box = document.getElementById("easingBox"),
		_start = startInput.onclick = function() {
		box.style.margin = "4px";
		box.style.cssFloat = box.style.float = "right";
		box.style.width = "100%";
		var ease = window[easeInput.value.split(".")[0]][easeInput.value.split(".")[1]],
			w = box.offsetWidth - 34;
		box.style.width = "30px";
		TweenLite.fromTo(box, Number(durationInput.value), {css:{marginRight:w}}, {css:{marginRight:4}, ease:ease, immediateRender:true});
	}
	$("#ease").on("change", function(e) {
		_start();
	});
})();
</script></p>
<p>The default ease in TweenLite is <code>Power1.easeOut</code> (which gives a more natural feel than a linear ease). Here is the syntax for defining the ease for a few tweens:</p>
<div><div id="highlighter_989692" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(photo, 1, {width:100, ease:Power2.easeOut});</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(photo, 1, {height:200, ease:Elastic.easeOut});</code></div></div></td></tr></tbody></table></div></div>
<p>If you prefer, you can define the ease as a string instead, either in the normal format like “Elastic.easeOut” or in the reverse no-dot synax (jQuery-style) like “easeOutElastic”.</p>
<div><div id="highlighter_422652" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(photo, 1, {width:100, ease:</code><code class="js string">"Elastic.easeOut"</code><code class="js plain">});</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(photo, 1, {height:200, ease:</code><code class="js string">"easeOutElastic"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>To get linear motion, just use the <code>Linear.easeNone</code> ease. Frankly, the most useful eases are all the <code>Power</code> eases, <code>Back.easeOut, Elastic.easeOut, SlowMo.ease, Bounce.easeOut</code> and sometimes <code>Linear.easeNone</code>. The rest are more for legacy code and they don’t look much different than one of the Power eases. The Power eases are all baked into the TweenLite core so that they’re accelerated in terms of performance.</p>
<p><a name="plugins"></a></p>
<h2>Plugins</h2>
<p>Think of plugins like special properties that are dynamically added to TweenLite, giving it extra abilities. This keeps the core engine small and efficient, yet allows for virtually unlimited capabilities to be added dynamically. Each plugin is associated with a property name and it takes responsibility for handling that property. For example, the CSSPlugin is associated with the “css” property name so if it loaded, it will intercept the “css” property, and the ScrollToPlugin will intercept the “scrollTo” value, etc.:</p>
<div><div id="highlighter_540490" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//CSSPlugin will intercept the "css" value...</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(photo, 1, {css:{scaleX:0.5, rotation:30}, ease:Power3.easeOut});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//ScrollToPlugin will intercept the "scrollTo" value (if it's loaded)...</code></div><div class="line number5 index4 alt2"><code class="js plain">TweenLite.to(window, 2, {scrollTo:{y:300}, ease:Bounce.easeOut});</code></div></div></td></tr></tbody></table></div></div>
<p>Normally, css-specific properties would need to be wrapped in their own object and passed in like <code>TweenLite.to(element, 1, {css:{left:"100px", top:"50px"}});</code> so that the engine knows that those properties should be handled by CSSPlugin, but because animating DOM elements in the browser is so common, TweenLite and TweenMax (as of version 1.8.0) automatically check to see if the target is a DOM element and if it is (and you haven’t already defined a “css” object in the vars parameter), the engine creates that css object for you and shifts any properties that aren’t reserved (like <code>onComplete, ease, delay</code>, etc. or plugin keywords like <code>scrollTo, raphael, easel</code>, etc.) into that css object when the tween renders for the first time. There is a slight performance penalty (virtually imperceptible unless you’re tweening a <strong>LOT</strong> of elements simultaneously), but in most cases the convenience is well worth it. In the code examples below, we’ll use the more concise style that omits the <code>css:{}</code> object but be aware that either style is acceptable.</p>
<div><div id="highlighter_698109" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//as of 1.8.0 the following two lines produce identical results, but the first instantiates slightly faster. The 2nd is more convenient to write, though.</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(element, 1, {css:{top:</code><code class="js string">"20px"</code><code class="js plain">, backgroundColor:</code><code class="js string">"#FF0000"</code><code class="js plain">}, ease:Power2.easeOut});</code></div><div class="line number3 index2 alt2"><code class="js plain">TweenLite.to(element, 1, {top:</code><code class="js string">"20px"</code><code class="js plain">, backgroundColor:</code><code class="js string">"#FF0000"</code><code class="js plain">, ease:Power2.easeOut});</code></div></div></td></tr></tbody></table></div></div>
<p>Don’t forget that you need to load the plugin’s JavaScript file to ensure that it works. For convenience, the major plugins like CSSPlugin, RoundPropsPlugin, and BezierPlugin are included <strong>inside</strong> of the TweenMax JavaScript file.</p>
<p><a name="css"></a></p>
<h2>Tweening CSS properties </h2>
<p>With the help of the CSSPlugin, <strong>GSAP can animate almost any css-related property</strong> of DOM elements including the obvious things like width, height, margins, padding, top, left, and more plus complex properties like transforms (rotation, scaleX, scaleY, skewX, skewY, x, y, rotationX, and rotationY), colors, backgroundPosition, opacity, and lots more. Load the CSSPlugin js file to enable these capabilities.</p>
<p><em><strong>Note:</strong> a common mistake is to forget to use camel case representations of the properties, so instead of “font-size”, you’d use “fontSize”. “background-color” would be “backgroundColor”.</em></p>
<p>You can even define properties that are not generally tweenable and GSAP will  apply the property for you (like position:”absolute” or borderStyle:”solid”). It is typically a good idea to define a unit of measurement (like “24px” instead of “24″ or “50%” rather than “50″) but the default in most cases is pixels (px), so you can omit the unit if you prefer. And even if the unit of measurement doesn’t match the current one, GSAP will attempt to convert them for you. So, for example, you could tween a width from “50%” to “200px”. </p>
<p>CSSPlugin can even animate complex values like <strong><code>boxShadow:"0px 0px 20px 20px red"</code> </strong> and <strong><code>borderRadius:"50% 50%"</code></strong> and <strong><code>border:"5px solid rgb(0,255,0)"</code></strong>. When necessary, it attempts to figure out if the property needs a <strong>vendor prefix</strong> and applies it accordingly. There may be a small subset of complex or bleeding-edge css properties that CSSPlugin can’t handle yet, but the vast majority work great.</p>
<p>In addition to almost all of the standard css properties, CSSPlugin recognizes some special ones that can be quite convenient:</p>
<ul>
<li class="paddedBullet"><strong>2D transforms</strong> like <strong>rotation</strong>, <strong>scaleX</strong>, <strong>scaleY</strong>, <strong>scale</strong>, <strong>skewX</strong>, <strong>skewY</strong>, <strong>x</strong>, and <strong>y</strong> – one of the most convenient things about the CSSPlugin is that it greatly simplifies transforms in the various browsers <strong>including IE back through version 6!</strong> No need to mess with various browser prefixes and funky matrix filters in IE. You can just set transform properties inuitively.
<div><div id="highlighter_51099" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//much simpler</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(element, 2, {rotation:30, scaleX:0.8});</code></div></div></td></tr></tbody></table></div></div>
<p>    By default, rotation, skewX, and skewY use degrees but you can use radians if you prefer. Simply append one of the standard suffixes (“rad” or “deg”) like this:</p>
<div><div id="highlighter_209023" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//use "deg" or "rad"</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(element, 2, {rotation:</code><code class="js string">"1.25rad"</code><code class="js plain">, skewX:</code><code class="js string">"30deg"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>    To be clear, this is like setting the element’s css <code>transform:rotate(1.25rad) skewX(30deg)</code> along with all the other browser prefix values and IE filter which would be much more verbose.</p>
<div style="margin:0; padding:0;"><strong><i>Notes about 2D transforms:</i></strong></div>
<ol style="margin-bottom:12px">
<li style="margin-bottom:4px"><i>It is typically best to set the element’s position to “absolute” to avoid clipping (mostly for old versions of IE). </i></li>
<li style="margin-bottom:4px"><i>You can use “scale” as a shortcut to control both the “scaleX” and “scaleY” properties identically.</i></li>
<li style="margin-bottom:4px"><i>The order in which you declare the transform properties makes no difference.</i></li>
<li style="margin-bottom:4px"><i>TweenLite has nothing to do with the rendering quality of the element in the browser. Some browsers seem to render transformed elements beautifully while others don’t handle anti-aliasing as well.</i></li>
</ol>
</li><li><strong>3D transforms</strong>: in addition to all of the regular 2D properties (x, y, scaleX, scaleY, scale, rotation, skewX, and skewY) that work in almost all browsers, you can animate 3D properties too like <strong>rotationX</strong>, <strong>rotationY</strong>, <strong>rotationZ</strong> (identical to regular “rotation”), <strong>z</strong>, <strong>perspective</strong>, and <strong>transformPerspective</strong> in most modern browsers (see <a href="http://caniuse.com/transforms3d" target="_blank">http://caniuse.com/transforms3d</a> for details about browser support for 3D transforms). Again, there is no need to use browser prefixes; CSSPlugin handles all of that for you under the hood. You can animate 3D transform properties and 2D properties (except skew) together inuitively:
<div><div id="highlighter_437206" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(element, 2, {rotationX:45, scaleX:0.8, z:-300});</code></div></div></td></tr></tbody></table></div></div>
<p><a href="http://www.greensock.com/css3/"><img src="./examples_files/css3_thumbnail.jpg" width="135" height="88" style="margin-right:8px; float:left;"></a><a href="http://www.greensock.com/css3/" target="_blank">See some interactive examples of 3D transforms and other CSS3 property animations</a> like boxShadow, textShadow, borderRadius, and clip in <a href="http://www.greensock.com/css3/" target="_blank">this article</a>. It demonstrates perspective principles too.</p>
<p>To get your elements to have a true 3D visual perspective applied, you must either set the <strong>“perspective”</strong> property of the parent element or set the special “transformPerspective” of the element itself (common values range from around 200 to 1000, the lower the number the stronger the perspective distortion). The “transformPerspective” is like adding a <code>perspective()</code> directly inside the css “transform” style, like: <code>transform:perspective(500px) rotateX(45deg)</code> which only applies to that specific element whereas if you want to a group of elements share a common perspective (the same vanishing point), you should set the regular “perspective” property on the parent/container of those elements. For more information about perspective, see <a href="http://desandro.github.com/3dtransforms/docs/perspective.html" target="_blank">this article</a>.</p>
<div><div id="highlighter_599623" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//apply a perspective to the PARENT element (the container) to make the perspective apply to all child elements (typically best)</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.set(container, {perspective:500});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//or set a default perspective that will be applied to every individual element that you tween in 3D:</code></div><div class="line number5 index4 alt2"><code class="js plain">CSSPlugin.defaultTransformPerspective = 500;</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="js comments">//or apply perspective to a single element using "transformPerspective"</code></div><div class="line number8 index7 alt1"><code class="js plain">TweenLite.set(element, {transformPerspective:500});</code></div></div></td></tr></tbody></table></div></div>
<p> In regular CSS, the order that you list the transforms matters but GSAP always applies them in the same order for consistency: scale, then rotation (same as rotationZ), then rotationY, then rotationX, then translation (x, y, z). If you want to rotate the element around a point in 3D space other than its center, use the <code>transformOrigin</code> property (see below). </p>
<div><div id="highlighter_656672" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//sample css:</code></div><div class="line number2 index1 alt1"><code class="js plain">.myClass {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">transform: scale(1.5, 1.5) rotateY(45deg) translate3d(10px, 0px, -200px)</code></div><div class="line number4 index3 alt1"><code class="js plain">}</code></div><div class="line number5 index4 alt2"><code class="js spaces">&nbsp;</code>&nbsp;</div><div class="line number6 index5 alt1"><code class="js comments">//corresponding GSAP transform (tweened over 2 seconds):</code></div><div class="line number7 index6 alt2"><code class="js plain">TweenLite.to(element, 2, {scale:1.5, rotationY:45, x:10, y:0, z:-200});</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="js comments">//sample css that uses a perspective():</code></div><div class="line number10 index9 alt1"><code class="js plain">.myClass {</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">transform: perspective(500px) rotate(120deg) translateY(50px)</code></div><div class="line number12 index11 alt1"><code class="js plain">}</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="js comments">//corresponding GSAP transform (set, not tweened):</code></div><div class="line number15 index14 alt2"><code class="js plain">TweenLite.set(element, {transformPerspective:500, rotation:120, y:50});</code></div></div></td></tr></tbody></table></div></div>
<p><i><strong>Notes about 3D transforms:</strong></i></p>
<ol>
<li>
                           <i>In browsers that don’t support 3D transforms, they’ll be ignored. For example, rotationX may not work, but rotation would. See <a href="http://caniuse.com/transforms3d" target="_blank">http://caniuse.com/transforms3d</a> for a chart of which browser versions support 3D transforms.</i>
                        </li>
<li>
                           <i>All transforms are remembered, so you can tween individual properties without worrying that they’ll be lost. You don’t need to define all of the transform properties on every tween – only the ones you want to animate.</i>
                        </li>
<li>
                           <i>TweenLite has nothing to do with the rendering quality of the element in the browser. Some browsers seem to render transformed elements beautifully while others don’t handle anti-aliasing as well.</i>
                        </li>
<li>
                           <i>To learn more about css 3D transforms, see <a href="http://coding.smashingmagazine.com/2012/01/06/adventures-in-the-third-dimension-css-3-d-transforms/" target="_blank">this article</a><br>
                           </i>
                        </li>
</ol>
</li>

<li class="paddedBullet"><strong>transformOrigin</strong> – Sets the origin around which all transforms occur. By default, it is in the center of the element ("50% 50%"). You can define the values using the keywords "top", "left", "right", or "bottom" or you can use percentages (bottom right corner would be "100% 100%") or pixels. If, for example, you want an object to spin around its top left corner you can do this:
<div><div id="highlighter_572890" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//spins around the element's top left corner</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(element, 2, {rotation:360, transformOrigin:</code><code class="js string">"left top"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>    The first value in the quotes refers to the x-axis and the second refers to the y-axis (you can optionally add a 3rd value to define a point in 3D space), so to make the object transform around exactly 50px in from its left edge and 20px from its top edge, you could do: </p>
<div><div id="highlighter_148750" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//spins/scales around a point offset from the top left by 50px, 20px</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(element, 2, {rotation:270, scale:0.5, transformOrigin:</code><code class="js string">"50px 20px"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
</li>
<li class="paddedBullet"><img src="./examples_files/directionalRotation.gif" style="float:right; margin-left:10px; border:solid #CCC 1px;"><strong>directionalRotation</strong> – tweens rotation in a particular direction which can be either <strong>clockwise</strong> (<code>"_cw"</code> suffix), <strong>counter-clockwise</strong> (<code>"_ccw"</code> suffix), or in the shortest direction (<code>"_short"</code> suffix) in which case the plugin chooses the direction for you based on the shortest path. For example, if the element’s rotation is currently 170 degrees and you want to tween it to -170 degrees, a normal rotation tween would travel a total of 340 degrees in the counter-clockwise direction, but if you use the “_short” suffix, it would travel 20 degrees in the clockwise direction instead. Example:
<div>
<div><div id="highlighter_134656" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(element, 2, {rotation:</code><code class="js string">"-170_short"</code><code class="js plain">});</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="js comments">//or even use it on 3D rotations and use relative prefixes:</code></div><div class="line number4 index3 alt1"><code class="js plain">TweenLite.to(element, 2, {rotation:</code><code class="js string">"-170_short"</code><code class="js plain">, rotationX:</code><code class="js string">"-=30_cw"</code><code class="js plain">, rotationY:</code><code class="js string">"1.5rad_ccw"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
</div>
<div style="clear:both"></div>
<p><i>Prior to version 1.9.0, directionalRotation was called shortRotation and it only handled going in the shortest direction. The new directionalRotation functionality is much more flexible and easy to use (just slap a suffix on the regular property). For backwards compatibility, CSSPlugin still recognizes “shortRotation”, but it has been deprecated.</i></p>
</li>
<li class="paddedBullet"><strong>autoAlpha</strong> – the same thing as "opacity" except that when the value hits "0", the "visibility" property will be set to "hidden" in order to improve browser rendering performance and prevent clicks/interactivity on the target. When the value is anything other than 0, "visibility" will be set to "visible". Example:
<div><div id="highlighter_243787" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//fade out and set visibility:hidden</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(element, 2, {autoAlpha:0});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//in 2 seconds, fade back in with visibility:visible</code></div><div class="line number5 index4 alt2"><code class="js plain">TweenLite.to(element, 2, {autoAlpha:1, delay:2});</code></div></div></td></tr></tbody></table></div></div>
</li>
<li class="paddedBullet"><strong>className</strong> – allows you to morph between classes on an element. For example, let’s say myElement has a class of "class1" currently and you want to change to "class2"  and animate the differences, you could do this:
<div><div id="highlighter_830385" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(myElement, 1, {className:</code><code class="js string">"class2"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>    And if you want to ADD the class to the existing one, you can simply use the “+=” prefix. To remove a class, use the “-=” prefix like this:</p>
<div><div id="highlighter_214964" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(myElement, 1, {className:</code><code class="js string">"+=class2"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>    <em>Note: there are a few css-related properties that don’t tween like IE filters, but that is a <strong>very</strong> rare exception. Also, there is a slight speed penalty when using className because the engine needs to loop through all of the css properties to analyze which ones are different.</em></p>
</li>
<li class="paddedBullet"><strong>autoRound</strong> – By default, CSSPlugin will round pixel values and zIndex to the closest integer during the tween (the inbetween values) because it improves browser performance, but if you’d rather disable that behavior, pass <code>autoRound:false</code> in the css object. You can still use the RoundPropsPlugin to manually define properties that you want rounded.</li>
</ul>
<p><a name="controlling"></a></p>
<h2>Controlling tweens</h2>
<p>Most other animation tools offer very limited controls, but GSAP was built from the ground up to be a professional-grade robust set of animation tools. You can easily pause(), resume() reverse(), restart(), seek(), or even alter the timeScale of any tween. In fact, you can  tween the timeScale of another tween to gradually slow it down or speed it up. To control a tween, however, you need an instance to work with. The to(), from(), and fromTo() methods all return an instance, so you can dump it into a variable as easily as:</p>
<div><div id="highlighter_883744" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//using the static to() method...</code></div><div class="line number2 index1 alt1"><code class="js keyword">var</code> <code class="js plain">tween = TweenLite.to(element, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//or use the object-oriented syntax...</code></div><div class="line number5 index4 alt2"><code class="js keyword">var</code> <code class="js plain">tween = </code><code class="js keyword">new</code> <code class="js plain">TweenLite(element, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>Then, you can call any of its methods:</p>
<div><div id="highlighter_463116" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//pause</code></div><div class="line number2 index1 alt1"><code class="js plain">tween.pause();</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//resume (honors direction - reversed or not)</code></div><div class="line number5 index4 alt2"><code class="js plain">tween.resume();</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="js comments">//reverse (always goes back towards the beginning)</code></div><div class="line number8 index7 alt1"><code class="js plain">tween.reverse();</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">//jump to exactly 0.5 seconds into the tween</code></div><div class="line number11 index10 alt2"><code class="js plain">tween.seek(0.5);</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="js comments">//make the tween go half-speed</code></div><div class="line number14 index13 alt1"><code class="js plain">tween.timeScale(0.5);</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="js comments">//make the tween go double-speed</code></div><div class="line number17 index16 alt2"><code class="js plain">tween.timeScale(2);</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="js comments">//immediately kill the tween and make it eligible for garbage collection</code></div><div class="line number20 index19 alt1"><code class="js plain">tween.kill();</code></div></div></td></tr></tbody></table></div></div>
<p>You can also kill ALL of the tweens of a particular element/target like this:</p>
<div><div id="highlighter_254778" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.killTweensOf(myElement);</code></div></div></td></tr></tbody></table></div></div>
<p>See the full <a href="http://api.greensock.com/js/">documentation</a> for details about all of the properties and methods available.</p>
<p><a name="sequencing"></a></p>
<h2>Sequencing and grouping tweens with TimelineLite</h2>
<p>Unlike most other JS animation tools, sequencing in GSAP is much more flexible than building a queue of tweens that run one-after-the-other. You have complete control over the relative timing of each tween – they can overlap as much as you want. And you can control entire sequences as a whole, reverse smoothly anytime, jump to any point, adjust the timeScale, etc. and everything renders in the proper order.</p>
<p><a href="http://www.greensock.com/sequence-video/">Watch this video</a> for a visual demo showing how TimelineLite can save you a lot of time.</p>
<p>Of course you could sequence tweens by using the “delay” special property on all your tweens, but that can get complicated when you build a long sequence and then later want to change the timing of something early in the sequence (you’d have to adjust all the delay values in tweens after that). Plus it would be a pain to control the whole sequence, like to pause() or resume() or reverse() the group on-the-fly. Sequencing is much easier with TimelineLite and its big brother, TimelineMax. </p>
<p>Let’s jump into some sample code:</p>
<div><div id="highlighter_564561" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//create a TimelineLite instance</code></div><div class="line number2 index1 alt1"><code class="js keyword">var</code> <code class="js plain">tl = </code><code class="js keyword">new</code> <code class="js plain">TimelineLite();</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//append a to() tween</code></div><div class="line number5 index4 alt2"><code class="js plain">tl.to(element, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">});</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="js comments">//add another sequenced tween (by default, tweens are added to the end of the timeline which makes sequencing simple)</code></div><div class="line number8 index7 alt1"><code class="js plain">tl.to(element, 1, {height:</code><code class="js string">"300px"</code><code class="js plain">, ease:Elastic.easeOut});</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">//offset the next tween by 0.75 seconds so there's a gap between the end of the previous tween and this new one</code></div><div class="line number11 index10 alt2"><code class="js plain">tl.to(element, 1, {opacity:0.5}, </code><code class="js string">"+=0.75"</code><code class="js plain">);</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="js comments">//overlap the next tween with the previous one by 0.5 seconds (notice the negative offset at the end)</code></div><div class="line number14 index13 alt1"><code class="js plain">tl.to(element, 1, {backgroundColor:</code><code class="js string">"#FF0000"</code><code class="js plain">}, </code><code class="js string">"-=0.5"</code><code class="js plain">);</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="js comments">//animate 3 elements (e1, e2, and e3) to a rotation of 60 degrees, and stagger their start times by 0.2 seconds</code></div><div class="line number17 index16 alt2"><code class="js plain">tl.staggerTo([e1, e2, e3], 1, {rotation:60}, 0.2);</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="js comments">//then call myFunction()</code></div><div class="line number20 index19 alt1"><code class="js plain">tl.call(myFunction);</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="js comments">//now we can control the entire sequence with the standard methods like these:</code></div><div class="line number23 index22 alt2"><code class="js plain">tl.pause();</code></div><div class="line number24 index23 alt1"><code class="js plain">tl.resume();</code></div><div class="line number25 index24 alt2"><code class="js plain">tl.restart();</code></div><div class="line number26 index25 alt1"><code class="js plain">tl.reverse();</code></div><div class="line number27 index26 alt2"><code class="js plain">tl.play();</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="js comments">//jump to exactly 2.5 seconds into the animation</code></div><div class="line number30 index29 alt1"><code class="js plain">tl.seek(2.5);</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="js comments">//slow down playback to 10% of the normal speed</code></div><div class="line number33 index32 alt2"><code class="js plain">tl.timeScale(0.1);</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="js comments">//add a label named "myLabel" at exactly 3 seconds:</code></div><div class="line number36 index35 alt1"><code class="js plain">tl.add(</code><code class="js string">"myLabel"</code><code class="js plain">, 3);</code></div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="js comments">//add a tween that starts at "myLabel"</code></div><div class="line number39 index38 alt2"><code class="js plain">tl.add( TweenLite.to(element, 1, {scale:0.5}), </code><code class="js string">"myLabel"</code><code class="js plain">);</code></div><div class="line number40 index39 alt1">&nbsp;</div><div class="line number41 index40 alt2"><code class="js comments">//jump to "myLabel" and play from there:</code></div><div class="line number42 index41 alt1"><code class="js plain">tl.play(</code><code class="js string">"myLabel"</code><code class="js plain">);</code></div></div></td></tr></tbody></table></div></div>
<p>Think of a timeline (as in a TimelineLite or TimelineMax instance) like a collection of tweens that are positioned at specific places on that timeline. It controls their playback. Timelines can be nested inside other timelines as deeply as you want. This is a very powerful concept because it allows you to control entire sequences in a modular way. Imagine 100 characters individually animating into place in a staggered fashion (100 tweens). They could all be grouped into a TimelineLite instance and then controled as a whole (using common methods like pause(), resume(), reverse(), restart(), etc.). In fact, you could create functions that return animations wrapped in a TimelineLite so that you can easily build a larger, more complex animation in a modular way.</p>
<p>A central concept to grasp is that every tween is inserted into a timeline. By default, it’s the root timeline inside the engine. When a timeline is playing, its virtual playhead advances. If you reverse() a timeline, the playhead travels in the opposite direction back towards its beginning. As the timeline’s playhead encounters tweens, it plays them accordingly. For example, if the playhead is positioned halfway through a tween, that tween will render as though it is 50% finished. If the timeline’s timeScale is set to 0.5, that would cause the playhead to travel at half speed. Consequently, any tweens it encounters would also appear to progress at half speed. Once you get the hang of how timelines work, <strong>they can revolutionize your animation workflow</strong>.</p>
<p>Just like tweens, timelines play immediately by default but you can pause them initially using <code>pause()</code> or by setting <code>paused:true</code> in the vars parameter of the constructor.</p>
<p>There are quite a few methods available in the timeline classes that give you precise control, and we’d encourage you to look through the <a href="http://api.greensock.com/js/" target="_blank">full documentation</a> to see what’s available. If you can think of something you’d like to do, chances are there’s a way to do it. </p>
<p><a name="tweenmax"></a></p>
<h2>Stepping up to TweenMax and TimelineMax</h2>
<p>Tight file size, outstanding performance, and a relatively robust feature set were all priorities in TweenLite and TimelineLite but there were some extra features that we wanted to add without bloating the core components. Enter TweenMax and TimelineMax. TweenMax extends TweenLite, doing EVERYTHING it does plus extras like repeat, yoyo, repeatDelay, and more. TimelineMax does the same for TimelineLite. Plus when you load the TweenMax JavaScript file, it also includes a bunch of extras automatically like CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin, TimelineLite, TimelineMax, and EasePack. Basically, if file size is a major concern for you, stick with TweenLite and manually load whichever plugins or eases you need. Otherwise, use TweenMax because it delivers the ultimate feature set with minimal hassle. </p>
<p>TweenMax uses exactly the same syntax as TweenLite. In fact, a TweenMax instance <strong>is</strong> a TweenLite instance. If you have a project that already uses TweenLite you could literally do a search and replace for all “TweenLite” instances with “TweenMax” and it would work great. TweenMax just recognizes some extra special properties, for example:</p>
<div><div id="highlighter_729168" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//repeat this tween 3 times (for a total of 4 cycles) and wait 0.5 seconds between each repeat</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenMax.to(element, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">, repeat:3, repeatDelay:0.5});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//fade the opacity up and down infinitely (a repeat of -1 means infinitely)</code></div><div class="line number5 index4 alt2"><code class="js plain">TweenMax.to(element, 1, {opacity:0, repeat:-1, yoyo:</code><code class="js keyword">true</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p>TimelineMax also offers repeat, yoyo, and repeatDelay as well as convenient methods like tweenTo(), currentLabel(), getLabelBefore() and getLabelAfter() and more. </p>
<div><div id="highlighter_394618" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js keyword">var</code> <code class="js plain">tl = </code><code class="js keyword">new</code> <code class="js plain">TimelineMax({repeat:3, yoyo:</code><code class="js keyword">true</code><code class="js plain">, repeatDelay:1, onComplete:timelineDone, onCompleteParams:[</code><code class="js string">"test1"</code><code class="js plain">, </code><code class="js string">"test2"</code><code class="js plain">]});</code></div><div class="line number2 index1 alt1"><code class="js plain">tl.staggerTo([e1, e2, e3], 1, {opacity:0, rotation:360}, 0.2);</code></div><div class="line number3 index2 alt2"><code class="js keyword">function</code> <code class="js plain">timelineDone(p1, p2) {</code></div><div class="line number4 index3 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">console.log(</code><code class="js string">"timeline done. params: "</code> <code class="js plain">+ p1 + </code><code class="js string">" and "</code> <code class="js plain">+ p2);</code></div><div class="line number5 index4 alt2"><code class="js plain">}</code></div></div></td></tr></tbody></table></div></div>
<p><a name="overwriting"></a></p>
<h2>Overwriting other tweens</h2>
<p>An often overlooked aspect of tweening is how (and if and when) tweens overwrite other tweens of the same object. For example, let’s say you have a button with onmouseover and onmouseout handlers that tween its opacity higher on the “over” event and lower on “out” event. To further complicate things, let’s say the “over” tween lasts 2 seconds and the “out” tween lasts 1 second. What should happen if the user rolls over/out/over/out quickly? See the problem? If tweens are allowed to run without any kind of overwriting, they’ll build up and fight with each other (one trying to tween the opacity higher, and the other lower). In this example, when the user rolls over, a 2-second tween would start increasing the opacity to 1, but if the user rolled off 0.2 seconds later, another tween would begin, causing the opacity to decrease. When that tween finishes 1 second later, the “over” tween is still going (since it had a duration of 2 seconds), so the opacity would suddenly jump up and finish off at a value of 1 even though the user rolled out!</p>
<p>Don’t worry. We’ve got you covered.</p>
<p>By default, whenever a TweenLite instance renders for the first time (after any delay), it analyzes all other active tweens of the same target and checks for individual overlapping properties. If it finds any, it kills the offending overlaps (again, only the individual properties). This overwrite mode is called <code>"auto"</code> and it is typically the most intuitive. However, there may be times when you want the new tween to kill all other tweens of the same object regardless of their start times or overlapping properties. That is what the <code>"all"</code> overwrite mode is for. And to skip overwriting altogether, you can define an overwrite mode of <code>"none"</code>. There are several other modes to choose from too, so check out the full docs for details. You define an overwrite mode with the “overwrite” special property like this:</p>
<div><div id="highlighter_338181" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//overwrites all tweens of myElement immediately</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(myElement, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">, overwrite:</code><code class="js string">"all"</code><code class="js plain">});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//doesn't overwrite anything (allows conflicts)</code></div><div class="line number5 index4 alt2"><code class="js plain">TweenLite.to(myElement, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">, overwrite:</code><code class="js string">"none"</code><code class="js plain">});</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="js comments">//overwrites only individual overlapping properties on concurrent tweens of myElement (this is the default, so you typically don't need to specify any overwrite in this scenario)</code></div><div class="line number8 index7 alt1"><code class="js plain">TweenLite.to(myElement, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">, overwrite:</code><code class="js string">"auto"</code><code class="js plain">});</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="js comments">//set the default overwrite mode to "all" instead of "auto"</code></div><div class="line number11 index10 alt2"><code class="js plain">TweenLite.defaultOverwrite = </code><code class="js string">"all"</code><code class="js plain">;</code></div></div></td></tr></tbody></table></div></div>
<p>Of course you can manually kill all the tweens of a particular object using the <code>TweenLite.killTweensOf()</code> method, but the nice thing about defining overwrite modes is that the overwriting doesn’t kick in until it’s necessary (when the tween renders for the first time) which is essential when working with complex sequences.</p>
<p><a name="faq"></a></p>
<h2>FAQ <span style="font-size:12px; font-style:italic; color:#555555">(click to view answer)</span></h2>
<ol>
<li class="faq expandable" style="cursor: pointer;">
    	Can I use jQuery with the GreenSock tools?<p></p>
<div class="expContent">
<div class="faqa">
    	Absolutely! In fact, we encourage it. <a href="http://www.jquery.com/" target="_blank">jQuery</a> is great for selecting DOM elements, adding event handlers, and lots more. GSAP treats jQuery objects as arrays, so you can pass a single jQuery object as the target of the tween and TweenLite/Max will tween all of the elements therein. For example:<p></p>
<div><div id="highlighter_457185" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//fade out all of the elements with the class "myClass"</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(</code><code class="js string">".myClass"</code><code class="js plain">, 1, {opacity:0});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//tween the width of the element with id "myElement" to 500px</code></div><div class="line number5 index4 alt2"><code class="js plain">TweenLite.to(</code><code class="js string">"#myElement"</code><code class="js plain">, 1, {width:</code><code class="js string">"500px"</code><code class="js plain">, ease:Elastic.easeOut});</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="js comments">//tween the "marginTop" of all objects of the class "myClass" in a staggered fashion so that they appear to fall into place from 100px up</code></div><div class="line number8 index7 alt1"><code class="js keyword">var</code> <code class="js plain">tl = </code><code class="js keyword">new</code> <code class="js plain">TimelineLite();</code></div><div class="line number9 index8 alt2"><code class="js plain">tl.staggerFrom(</code><code class="js string">".myClass"</code><code class="js plain">, 1, {marginTop:</code><code class="js string">"-=100px"</code><code class="js plain">, opacity:0}, 0.1);</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="js comments">//or use jQuery's each() method to loop through the results and stagger a fade out</code></div><div class="line number12 index11 alt1"><code class="js plain">$(</code><code class="js string">".myClass"</code><code class="js plain">).each( </code><code class="js keyword">function</code><code class="js plain">(index, element) {</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">TweenLite.to( element, 1, {autoAlpha:0, delay:index * 0.2});</code></div><div class="line number14 index13 alt1"><code class="js plain">});</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="js comments">//add a click handler that uses $(this) to refer to the menu element that was clicked and tween its height to 100px</code></div><div class="line number17 index16 alt2"><code class="js plain">$(</code><code class="js string">"#menu"</code><code class="js plain">).click(</code></div><div class="line number18 index17 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">function</code><code class="js plain">(){</code></div><div class="line number19 index18 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">TweenLite.to( $(</code><code class="js keyword">this</code><code class="js plain">), 0.7, { height:</code><code class="js string">"100px"</code><code class="js plain">, ease:Power2.easeInOut } );</code></div><div class="line number20 index19 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number21 index20 alt2"><code class="js plain">);</code></div></div></td></tr></tbody></table></div></div>
<p>		Of course you need to load jQuery into your HTML document in order to use it. TweenLite doesn’t have any dependencies on 3rd party tools like jQuery, so it is completely optional.
		</p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Which browsers work with the JavaScript version of GSAP?<p></p>
<div class="expContent">
<div class="faqa">
        	GSAP itself is pure JavaScript and should work in virtually <strong>ALL</strong> browsers. The CSSPlugin tweens css-related values and its compatibility is based on which properties you use in your tweens. GSAP wasn’t intended to solve all browser incompatibilities, but it does implement wizardry for critical features like <code>opacity</code>, transforms (<code>rotation, scaleX, scaleY, skewX, skewY, x, and y</code>), and <code>transformOrigin</code> so those should work in all major browsers even back to IE6. Firefox doesn’t support <code>backgroundPositionX</code> or <code>backgroundPositionY</code>, so those specific properties won’t work but <code>backgroundPosition</code> will for virtually all browsers. There is <strong>NOT</strong> a predetermined list of css properties that you can tween – the platform will attempt to tween <strong>ANY</strong> property you pass in. If it is numeric, it will tween it. If it isn’t numeric and it isn’t a recognized special property, CSSPlugin will just set the property to the value you provide (without tweening it). So, for example, if you try to tween to <code>display:"inline"</code>, that isn’t a tweenable property but it will still be set accordingly during the tween, so feel free to use that to your advantage.
        </div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	How big are the JavaScript files?<p></p>
<div class="expContent">
<div class="faqa">
            Here are the minified gzipped file sizes:<p></p>
<ul>
<li><strong>TweenLite </strong>(includes standard eases)<strong>: 7kb</strong> <em>(22kb without gzip)</em></li>
<li><strong>CSSPlugin: 11kb</strong> <em>(28kb without gzip)</em></li>
<li><strong>RoundPropsPlugin: 0.5kb</strong> <em>(1kb without gzip)</em></li>
<li><strong>BezierPlugin: 3.6kb</strong> <em>(7.8kb without gzip)</em></li>
<li><strong>EasePack: 1.2kb</strong> <em>(3.6kb without gzip)</em></li>
<li><strong>TimelineLite: 2.8kb</strong> <em>(8.8kb without gzip)</em></li>
<li><strong>TimelineMax</strong> (includes TimelineLite): <strong>4.4kb</strong> <em>(15.6kb without gzip)</em></li>
<li><strong>TweenMax</strong> (includes ALL of the above): <strong>28kb</strong> <em>(86kb without gzip)</em></li>
</ul></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	How can I define relative values for tweens? <p></p>
<div class="expContent">
<div class="faqa">
            Simply add a “+=” or “-=” prefix to the value to make it relative. For example:<p></p>
<div><div id="highlighter_894883" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//make myElement's width 100px more than what it is when the tween begins</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(myElement, 1, {width:</code><code class="js string">"+=100px"</code><code class="js plain">});</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//make myElement's rotation 30 degrees less than what it is when the tween starts</code></div><div class="line number5 index4 alt2"><code class="js plain">TweenLite.to(myElement, 1, {rotation:</code><code class="js string">"-=30deg"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p></p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Does the CSSPlugin solve all of the browser inconsistencies or change the way css properties are rendered in the browser?<p></p>
<div class="expContent">
<div class="faqa">
    		It can’t solve <strong>all</strong> inconsistencies but it does solve a <strong>LOT</strong> of them and works around various bugs in the browsers. For example, it leverages IE’s filters and some fancy math with margins to make 2D transforms work in older versions of IE (including transformOrigin), plus opacity works across all major browsers (again, using filters in old versions of IE). Workarounds are included for Safari’s 3D transformOrigin bug and Firefox’s flickering 3D transforms issue and iOS’s requestAnimationFrame inconsistency, and many more.
        </div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Can I tween multiple objects with one tween?<p></p>
<div class="expContent">
<div class="faqa">
    		Sure, just pass an array of the objects as the target of the tween, like this:<p></p>
<div><div id="highlighter_723505" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//tweens multiple objects simultaneously</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to([e1, e2, e3], 1, {autoAlpha:0});</code></div></div></td></tr></tbody></table></div></div>
<p></p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Does it matter what order I define things inside the <code>vars</code> parameter?<p></p>
<div class="expContent">
<div class="faqa">
    		No, it doesn’t matter.<p></p>
<div><div id="highlighter_694529" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//the following produce identical results (the order of the properties doesn't matter)</code></div><div class="line number2 index1 alt1"><code class="js plain">TweenLite.to(element, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">, height:</code><code class="js string">"300px"</code><code class="js plain">, ease:Power2.easeOut});</code></div><div class="line number3 index2 alt2"><code class="js plain">TweenLite.to(element, 1, {height:</code><code class="js string">"300px"</code><code class="js plain">, width:</code><code class="js string">"50%"</code><code class="js plain">, ease:Power2.easeOut});</code></div><div class="line number4 index3 alt1"><code class="js plain">TweenLite.to(element, 1, {ease:Power2.easeOut, width:</code><code class="js string">"50%"</code><code class="js plain">, height:</code><code class="js string">"300px"</code><code class="js plain">});</code></div></div></td></tr></tbody></table></div></div>
<p></p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Can I use GSAP for canvas objects or 3rd party tools like EaselJS? Is it only for animating DOM elements?<p></p>
<div class="expContent">
<div class="faqa">
        	You can animate <strong>ANY</strong> numeric property of <strong>ANY</strong> JavaScript object – it’s not just for DOM elements. So yes, you can animate canvas objects, <a href="http://www.createjs.com/#!/EaselJS" target="_blank">EaselJS</a> assets, and pretty much anything JavaScript-related. In fact, GSAP has an EaselPlugin specifically for making it easier to tween EaselJS objects. If you need to run logic after each refresh (like to redraw things on the canvas), either use an onUpdate on the individual tween/timeline or add a “tick” event listener to the core Ticker that drives the platform.
        </div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Does TweenLite/Max use CSS3 transitions to deliver even better performance (with help from the GPU)?<p></p>
<div class="expContent">
<div class="faqa">
    		CSS3 transitions have some <a href="http://www.greensock.com/transitions/">significant limitations</a> that make them unworkable for a serious animation platform. They don’t provide precise controls over the timing or easing. They’re great for simple effects but the GreenSock Animation Platform delivers extremely precise rendering, so you can do things like pause() and reverse() an animation anytime or skip to a specific time and play from there, etc. Try creating a CSS3 transition that uses an Elastic.easeOut or SlowMo.ease and then jump to 0.72494-seconds into a 2-second transition and pause() only to resume() later. It’s impossible from what I understand. So no, the platform doesn’t make use of CSS3 transitions. However, it is highly optimized for performance. See the <a href="http://www.greensock.com/transitions/">CSS3 Transitions Cage Match</a> for a detailed breakdown of how GSAP stacks up against “hardware accelerated” transitions.
        </div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	What if i need to pass parameters to my onComplete function or define its scope?<p></p>
<div class="expContent">
<div class="faqa">
    		That’s what the onCompleteParams and onCompleteScope special properties are for. Here is some sample code:<p></p>
<div><div id="highlighter_648211" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.to(element, 1, {width:</code><code class="js string">"50%"</code><code class="js plain">, onComplete:myFunction, onCompleteParams:[</code><code class="js string">"param1"</code><code class="js plain">, </code><code class="js string">"param2"</code><code class="js plain">], onCompleteScope:</code><code class="js keyword">this</code><code class="js plain">});</code></div><div class="line number2 index1 alt1"><code class="js keyword">function</code> <code class="js plain">myFunction(p1, p2) {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">console.log(</code><code class="js string">"tween completed. Received parameters: "</code> <code class="js plain">+ p1 + </code><code class="js string">" and "</code> <code class="js plain">+ p2 + </code><code class="js string">". The scope is: "</code> <code class="js plain">+ </code><code class="js keyword">this</code><code class="js plain">);</code></div><div class="line number4 index3 alt1"><code class="js plain">}</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="js comments">//or if you are using jQuery, here is an example of using $(this) to clarify scope. When you click the element with an id of "myElement", it will tween its height to 100px and then its width to 50%. Notice since we define the onCompleteScope, the "this" keyword inside the onComplete function refers to the element itself:</code></div><div class="line number7 index6 alt2"><code class="js plain">$(</code><code class="js string">"#myElement"</code><code class="js plain">).click(</code></div><div class="line number8 index7 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword">function</code><code class="js plain">(){</code></div><div class="line number9 index8 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">TweenLite.to($(</code><code class="js keyword">this</code><code class="js plain">), 0.7, { height:</code><code class="js string">"100px"</code><code class="js plain">, ease:Power2.easeInOut, onCompleteScope:$(</code><code class="js keyword">this</code><code class="js plain">), onComplete:</code><code class="js keyword">function</code><code class="js plain">(){</code></div><div class="line number10 index9 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">TweenLite.to(</code><code class="js keyword">this</code><code class="js plain">, 0.7, { width:</code><code class="js string">"50%"</code><code class="js plain">, ease:Power2.easeInOut} );</code></div><div class="line number11 index10 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number12 index11 alt1"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">});</code></div><div class="line number13 index12 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain">}</code></div><div class="line number14 index13 alt1"><code class="js plain">);</code></div></div></td></tr></tbody></table></div></div>
<p>		The same is true for onUpdate, onUpdateParams, onUpdateScope, onStart, onStartParams, and onStartScope. See the <a href="http://api.greensock.com/js/" target="_blank">full documentation</a> for details.
        </p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Do I need to worry about garabage collection? What happens to a tween when it finishes?<p></p>
<div class="expContent">
<div class="faqa">
    		No need to worry. Tweens and timelines are automatically made eligible for garbage collection when appropriate (typically when they finish but if you maintain a reference to an instance so that you can restart it later, for example, it won’t be gc’d out from under you). In summary, the system manages this for you and generally cleans up after itself.
        </div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	I noticed some occasional stutters and jerky animation – is that a problem with the animation engine?<p></p>
<div class="expContent">
<div class="faqa">
    		No, unforutunately most of the browsers have hiccups like that and they are indeed very annoying but they happen for any animation engine and really can’t be completely avoided (as far as I know). They most likely have to do with garbage collection routines which kick in unpredictably.
            </div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Does the GreenSock Animation Platform use the newer “requestAnimationFrame” API for its timing mechanism to maximize performance and minimize CPU load?<p></p>
<div class="expContent">
<div class="faqa">
    		Yes indeed, although it falls back to a standard <code>setTimeout()</code> if the browser doesn’t support requestAnimationFrame. And if you prefer not to use requestAnimationFrame, you can disable it by calling <code>TweenLite.ticker.useRAF(false)</code>. The main benefit of requestAnimationFrame is that it synchronizes animation renders with when modern browsers refresh the screen and it also reduces the frequency of updates significantly when the user switches to another tab in the browser, reducing the load on the processor and saving battery on mobile devices.
       	</div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Can I limit the number of frames per second that the tweening engine updates?<p></p>
<div class="expContent">
<div class="faqa">
    		Sure, you can set a maximum fps using the Ticker’s <code>fps()</code> method. For example to set it to 30fps, you’d do: <code>TweenLite.ticker.fps(30)</code>. The default is roughly 60fps in most modern browsers.
            </div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Can I call my own function after every tick (frame), like for repainting a canvas or running my own game logic, etc.?<p></p>
<div class="expContent">
<div class="faqa">
    		Sure. You can use the Ticker’s <code>addEventListener()</code> to add your own “tick” event listener like this:<p></p>
<div><div id="highlighter_991552" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js plain">TweenLite.ticker.addEventListener(</code><code class="js string">"tick"</code><code class="js plain">, tickHandler);</code></div><div class="line number2 index1 alt1"><code class="js keyword">function</code> <code class="js plain">tickHandler() {</code></div><div class="line number3 index2 alt2"><code class="js spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js comments">//run your logic here...</code></div><div class="line number4 index3 alt1"><code class="js plain">}</code></div></div></td></tr></tbody></table></div></div>
<p></p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Can I chain the method calls like in jQuery?<p></p>
<div class="expContent">
<div class="faqa">
    		Most definitely. Here are some examples:<p></p>
<div><div id="highlighter_847047" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//first we'll create a TimelineLite instance</code></div><div class="line number2 index1 alt1"><code class="js keyword">var</code> <code class="js plain">tl = </code><code class="js keyword">new</code> <code class="js plain">TimelineLite();</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="js comments">//now let's chain 3 sequenced tweens together</code></div><div class="line number5 index4 alt2"><code class="js plain">tl.to(e1, 1, {autoAlpha:1}).to(e1, 2, {width:</code><code class="js string">"50%"</code><code class="js plain">, ease:Power2.easeInOut}).to(e1, 1, {height:</code><code class="js string">"200px"</code><code class="js plain">});</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="js comments">//or affect a tween immediately after it's created, like by setting its timeScale and jumping to a time of 0.5 and pausing there</code></div><div class="line number8 index7 alt1"><code class="js plain">TweenLite.to(element, 5, {width:</code><code class="js string">"500px"</code><code class="js plain">}).timeScale(2).pause(0.5);</code></div></div></td></tr></tbody></table></div></div>
<p></p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	What if I need to tween values that are attached to getter/setter functions rather than regular properties?<p></p>
<div class="expContent">
<div class="faqa">
    		No problem – TweenLite and TweenMax automatically sense if the property is a function and treat it accordingly. Let’s say, for example, you have an object with a “height()” method that acts as both a getter and setter (similar to many jQuery methods). Like if you pass a value it acts as a setter, otherwise it acts as a getter. Or maybe you have separate methods using the common naming convention with “get”/”set” prefixes like <code>getMyProperty()</code> and <code>setMyProperty()</code> – the platform handles both types of getters/setters easily:<p></p>
<div><div id="highlighter_899131" class="syntaxhighlighter  js"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="js comments">//first let's demonstrate using a common method for both getting and setting</code></div><div class="line number2 index1 alt1"><code class="js keyword">var</code> <code class="js plain">h = obj1.height(); </code><code class="js comments">//gets</code></div><div class="line number3 index2 alt2"><code class="js plain">obj1.height(100); </code><code class="js comments">//sets</code></div><div class="line number4 index3 alt1"><code class="js plain">TweenLite.to(obj1, 1, {height:200}); </code><code class="js comments">//calls height() to get the initial value, and then sets the value on each update of the tween, passing the new value to height()</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="js comments">//now we'll demonstrate using separate get/set methods</code></div><div class="line number7 index6 alt2"><code class="js keyword">var</code> <code class="js plain">h = obj2.getHeight(); </code><code class="js comments">//gets</code></div><div class="line number8 index7 alt1"><code class="js plain">obj2.setHeight(100); </code><code class="js comments">//sets</code></div><div class="line number9 index8 alt2"><code class="js plain">TweenLite.to(obj2, 1, {setHeight:200}); </code><code class="js comments">//TweenLite automatically checks for an obj2.getHeight() to get the initial value, then uses obj2.setHeight() to set the height on each update of the tween.</code></div></div></td></tr></tbody></table></div></div>
<p></p></div>
</div>
</li>
<li class="faq expandable" style="cursor: pointer;">
    	Do I have to purchase a license to use this code? Can I use it in commercial projects?<p></p>
<div class="expContent">
<div class="faqa">
        	GreenSock uses a very permissive license that allows you to use the tools for <strong>free</strong> for everything except a very specific type of commercial use (if you collect a fee from multiple customers for the same app/product/site that uses GreenSock tools) which makes it extremely accessible and business-friendly while providing a small funding mechanism to sustain ongoing support, enhancement, and innovation. The web is littered with abandoned “open source” projects, but GreenSock has a years-long track record of commitment to the platform. This unique licensing model is a key component of that sustainability. If multiple customers are charged a usage/access/license fee of any kind, please simply sign up for a corporate <a href="http://www.greensock.com/club/">Club GreenSock membership</a> which comes with a special commercial license granting you permission to do so. <a href="http://www.greensock.com/club/">Click here for details</a>. Joining the club also gets you members-only bonus plugins, classes, update notifications, and <a href="http://www.greensock.com/club/">more</a>. Please see the <a href="http://www.greensock.com/licensing/">licensing page</a> for details.
        </div>
</div>
</li>
</ol>
<h2>Stay up to date</h2>
<p>We’d highly recommend checking back frequently and getting updated JavaScript files because we’re actively adding features, patching bugs, implementing workarounds for new browser inconsistencies, etc. <a href="https://www.greensock.com/account/?action=signup">Sign up for a free GreenSock account</a> so that you’re on our mailing list and get important notifications. Don’t forget to follow us on Twitter as <a href="https://twitter.com/GreenSock">@greensock</a> and <a href="http://facebook.com/greensock">Facebook</a>.</p>
<h2>Need help?</h2>
<p>There are dedicated forums for all GreenSock tools at <a href="http://forums.greensock.com/" target="_blank">http://forums.greensock.com/</a>. Keep in mind that you’ll increase your chances of getting a prompt answer if you provide a brief explanation and include a simplified HTML file (and any dependencies) that clearly demonstrates the problem with as little code as possible.</p>
<div class="sociable"><div><iframe src="./examples_files/like.htm" scrolling="no" frameborder="0" class="sociable-fb-standard"></iframe></div><div><span class="sociable-tagline"></span></div><ul><li><a rel="nofollow" target="_blank" href="http://twitter.com/home?status=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29%20-%20http://bit.ly/Kjf1TG"><img src="./examples_files/twitter.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">Twitter<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://www.facebook.com/share.php?u=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&t=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29"><img src="./examples_files/facebook.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">Facebook<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://digg.com/submit?phase=2&url=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&title=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29&bodytext=Animating%20with%20code%20may%20seem%20intimidating%20at%20first%2C%20but%20don%27t%20worry%20%E2%80%93%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29%20was%20engineered%20to%20make%20it%20simple%20and%20intuitive.%20The%20platform%20is%20also%20highly%20optimized%20for%20performance%20and%20unprecedented%20flexibility.%20Hang%20in%20there%20through%20the%20learning%20curve%20and%20you%27ll%20be%20glad%20you%20did.%20For%20now%2C%20we%27ll%20focus%20on%20getting%20you%20up%20and%20running%20with%20the%20core%20engine%2C%20TweenLite.%20Then%20we%27ll%20discuss%20if%20and%20when%20you%20might%20want%20to%20put%20the%20other%20tools%20to%20work%20%28like%20TweenMax%2C%20TimelineLite%2C%20TimelineMax%2C%20etc.%29.%20If%20you%27ve%20used%20the%20Flash%20version%20of%20the%20platform%2C%20you%20should%20notice%20that%20the%20syntax%20is%20identical%20%28although%20you%27ll%20definitely%20want%20to%20read%20up%20on%20the%20CSSPlugin%20and%20check%20out%20the%20FAQ%20section%29."><img src="./examples_files/digg.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">Digg<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&title=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29"><img src="./examples_files/stumbleupon.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">StumbleUpon<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://delicious.com/post?url=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&title=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29&notes=Animating%20with%20code%20may%20seem%20intimidating%20at%20first%2C%20but%20don%27t%20worry%20%E2%80%93%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29%20was%20engineered%20to%20make%20it%20simple%20and%20intuitive.%20The%20platform%20is%20also%20highly%20optimized%20for%20performance%20and%20unprecedented%20flexibility.%20Hang%20in%20there%20through%20the%20learning%20curve%20and%20you%27ll%20be%20glad%20you%20did.%20For%20now%2C%20we%27ll%20focus%20on%20getting%20you%20up%20and%20running%20with%20the%20core%20engine%2C%20TweenLite.%20Then%20we%27ll%20discuss%20if%20and%20when%20you%20might%20want%20to%20put%20the%20other%20tools%20to%20work%20%28like%20TweenMax%2C%20TimelineLite%2C%20TimelineMax%2C%20etc.%29.%20If%20you%27ve%20used%20the%20Flash%20version%20of%20the%20platform%2C%20you%20should%20notice%20that%20the%20syntax%20is%20identical%20%28although%20you%27ll%20definitely%20want%20to%20read%20up%20on%20the%20CSSPlugin%20and%20check%20out%20the%20FAQ%20section%29."><img src="./examples_files/delicious.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">del.icio.us<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://buzz.yahoo.com/submit/?submitUrl=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&submitHeadline=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29&submitSummary=Animating%20with%20code%20may%20seem%20intimidating%20at%20first%2C%20but%20don%27t%20worry%20%E2%80%93%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29%20was%20engineered%20to%20make%20it%20simple%20and%20intuitive.%20The%20platform%20is%20also%20highly%20optimized%20for%20performance%20and%20unprecedented%20flexibility.%20Hang%20in%20there%20through%20the%20learning%20curve%20and%20you%27ll%20be%20glad%20you%20did.%20For%20now%2C%20we%27ll%20focus%20on%20getting%20you%20up%20and%20running%20with%20the%20core%20engine%2C%20TweenLite.%20Then%20we%27ll%20discuss%20if%20and%20when%20you%20might%20want%20to%20put%20the%20other%20tools%20to%20work%20%28like%20TweenMax%2C%20TimelineLite%2C%20TimelineMax%2C%20etc.%29.%20If%20you%27ve%20used%20the%20Flash%20version%20of%20the%20platform%2C%20you%20should%20notice%20that%20the%20syntax%20is%20identical%20%28although%20you%27ll%20definitely%20want%20to%20read%20up%20on%20the%20CSSPlugin%20and%20check%20out%20the%20FAQ%20section%29.&submitCategory=science&submitAssetType=text"><img src="./examples_files/yahoobuzz.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">Yahoo! Buzz<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://www.google.com/bookmarks/mark?op=edit&bkmk=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&title=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29&annotation=Animating%20with%20code%20may%20seem%20intimidating%20at%20first%2C%20but%20don%27t%20worry%20%E2%80%93%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29%20was%20engineered%20to%20make%20it%20simple%20and%20intuitive.%20The%20platform%20is%20also%20highly%20optimized%20for%20performance%20and%20unprecedented%20flexibility.%20Hang%20in%20there%20through%20the%20learning%20curve%20and%20you%27ll%20be%20glad%20you%20did.%20For%20now%2C%20we%27ll%20focus%20on%20getting%20you%20up%20and%20running%20with%20the%20core%20engine%2C%20TweenLite.%20Then%20we%27ll%20discuss%20if%20and%20when%20you%20might%20want%20to%20put%20the%20other%20tools%20to%20work%20%28like%20TweenMax%2C%20TimelineLite%2C%20TimelineMax%2C%20etc.%29.%20If%20you%27ve%20used%20the%20Flash%20version%20of%20the%20platform%2C%20you%20should%20notice%20that%20the%20syntax%20is%20identical%20%28although%20you%27ll%20definitely%20want%20to%20read%20up%20on%20the%20CSSPlugin%20and%20check%20out%20the%20FAQ%20section%29."><img src="./examples_files/googlebookmark.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">Google Bookmarks<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://www.greensock.com/feed/"><img src="./examples_files/rss.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">RSS<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://www.linkedin.com/shareArticle?mini=true&url=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&title=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29&source=GreenSock+Engaging+the+internet&summary=Animating%20with%20code%20may%20seem%20intimidating%20at%20first%2C%20but%20don%27t%20worry%20%E2%80%93%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29%20was%20engineered%20to%20make%20it%20simple%20and%20intuitive.%20The%20platform%20is%20also%20highly%20optimized%20for%20performance%20and%20unprecedented%20flexibility.%20Hang%20in%20there%20through%20the%20learning%20curve%20and%20you%27ll%20be%20glad%20you%20did.%20For%20now%2C%20we%27ll%20focus%20on%20getting%20you%20up%20and%20running%20with%20the%20core%20engine%2C%20TweenLite.%20Then%20we%27ll%20discuss%20if%20and%20when%20you%20might%20want%20to%20put%20the%20other%20tools%20to%20work%20%28like%20TweenMax%2C%20TimelineLite%2C%20TimelineMax%2C%20etc.%29.%20If%20you%27ve%20used%20the%20Flash%20version%20of%20the%20platform%2C%20you%20should%20notice%20that%20the%20syntax%20is%20identical%20%28although%20you%27ll%20definitely%20want%20to%20read%20up%20on%20the%20CSSPlugin%20and%20check%20out%20the%20FAQ%20section%29."><img src="./examples_files/linkedin.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">LinkedIn<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li><li><a rel="nofollow" target="_blank" href="http://reddit.com/submit?url=http%3A%2F%2Fwww.greensock.com%2Fget-started-js%2F&title=Getting%20Started%20with%20the%20JavaScript%20Version%20of%20the%20GreenSock%20Animation%20Platform%20%28GSAP%29"><img src="./examples_files/reddit.png" class="sociable-img" title="" alt=""></a><div class="fg-tooltip">Reddit<div class="fg-tooltip-pointer-down"><div class="fg-tooltip-pointer-down-inner"></div></div></div></li></ul></div>
			<a name="comments"></a>
<h2>Comments (66)
	<div style="float:right;margin-top:-5px;width:90px;">
		<div class="button-left" style="width:10px"><span></span></div>
		<div class="button-mid" style="width:65px;font-size:68%;padding-bottom:5px;padding-top:3px;height:20px"><a href="http://www.greensock.com/get-started-js/feed/">Subscribe</a></div>
		<div class="button-right" style="width:10px"><span></span></div>
	</div>
	<a href="http://www.greensock.com/get-started-js/feed/"><img src="./examples_files/rss(1).png" alt="RSS" class="rss-comments"></a></h2>


	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.snorkl.tv/2012/05/greensock-v12-beta-released-javascript-preview/" rel="external nofollow" class="url">GreenSock v12 Beta Released: JavaScript Preview</a> on May 15, 2012</div>
		<p>[...] Getting Started with the JavaScript Version of the GreenSock Animation Platform [...]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.greenorangestudios.com/" rel="external nofollow" class="url">Brennan</a> on May 15, 2012</div>
		<p>Completely agree with @TONY. Amazing Great work good sir.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.mode7james.com/" rel="external nofollow" class="url">James Allen</a> on May 15, 2012</div>
		<p>Blazing fast, great work!!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Fily on May 15, 2012</div>
		<p>All I can say is WOW! I will definitely give it a try. Keep up the good work Jack, you are from a different world!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by flacoloco on May 15, 2012</div>
		<p>I have been using GSAP for AS3 since 2009 and I have to say is simply the best library for animations I have used ever. Looking forward to try the JavaScript version.</p>
<p>Great work!</p>
<p>Many, many thanks!!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by LD on May 15, 2012</div>
		<p>Are there any demos/samples/tutorials?</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by steph on May 15, 2012</div>
		<p>Ah…So excited about the JS framework, this is going to remind me of Flash animation (in a good way!). Great job, guys: I can’t wait to start playing with this!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.g3logic.com/" rel="external nofollow" class="url">Guy Scott</a> on May 15, 2012</div>
		<p>Just renewed my membership and upgraded to Shockingly Green… not because I needed any of the bonuses, but just to show my appreciation. I’m sure you’re sick of the accolades (or maybe you’re not), but honest to God, you made Flash programming so much more enjoyable… and now this! I can’t believe I’m using TweenMax.to in my jQuery projects!!! You sir, are a friggin’ God!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on May 15, 2012</div>
		<p>Absolutely, LD, there are several examples in the zip download to get you going plus there’s a full “getting started” guide at <a href="http://www.greensock.com/get-started-js/" rel="nofollow">http://www.greensock.com/get-started-js/</a>. Is that what you were looking for? There will be more in the future. Carl has a habit of posting very helpful videos and tutorials about GreenSock tools over at <a href="http://www.snorkl.tv/" rel="nofollow">http://www.snorkl.tv</a> too.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://parkerbennett.com/" rel="external nofollow" class="url">Parker Bennett</a> on May 15, 2012</div>
		<p>I’ve sworn off Flash, but Greensock made it so easy to do amazing animations. Now it’s like having an old friend back. I can’t wait to start playing! I’ll be renewing my membership as well. Thanks for bringing my old secret weapon into my new arsenal. Thanks, Carl!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by dada on May 16, 2012</div>
		<p>you are a gifted saint</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Olivier Clement on May 16, 2012</div>
		<p>Definitely excited about this one! Great news indeed!<br>
Been using Greensock on AS2/3 back in the days and have left the Flash platform a while ago. Great to see this Engine back in game! (Sorry Flash, we had good times <img src="./examples_files/icon_razz.gif" alt=":P" class="wp-smiley"> )</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://twitter.com/mydeadpixel" rel="external nofollow" class="url">Gary</a> on May 16, 2012</div>
		<p>Sweet Jesus yes!! Thanks so much for all your hard work!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by bosworth99 on May 16, 2012</div>
		<p>Like many here, I do very little work in flash these days (though I still think its a great platform) – at one time I made heavy use of the GS platform to breathe some life into my work. I’m really really happy to see this same killer library incorporated into my workflow again. Can’t wait to get started!!! Jack – you rock.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://elycruz.com/" rel="external nofollow" class="url">Ely Cruz</a> on May 16, 2012</div>
		<p>Wholly $#*+!!!  This is bonkers!!!  “It’s a nick nack paddy whack out of the ball park Jim!”  This will give actionscript styled animations in our html projects.  Quite the game changer I must say!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Tyler on May 16, 2012</div>
		<p>Jack, you have done it again! I have been waiting for a JS port, but having had so much functionality in v11 for AS2 / AS3 I wasn’t sure if it was possible! Thank you! </p>
<p>Tyler</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Florian on May 17, 2012</div>
		<p>Thanks for this great work, i’ll spread the word… ! </p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by David Lee on May 18, 2012</div>
		<p>…This is definitely a game changer, especially for a lot of AS guys who are transitioning to JS/CC.</p>
<p>Thanks Jack!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://websnap.cl/" rel="external nofollow" class="url">Rodrigo</a> on May 19, 2012</div>
		<p>Whoa!!!!!!!!!!!</p>
<p>I’m already druling about all the things that can be done with this, imagine move css objects around anywhere in the page with all the cool things that the AS is able to do, and that is just one thing, and integrating it with other JS gadgets and functions, aw men the possibilities are like infinite.</p>
<p>THANK YOU!!!!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Bob on May 21, 2012</div>
		<p>Perfectly!!!!!!!!!!! Thank you. Its new step in js gamedev.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://serenitystudio.de/" rel="external nofollow" class="url">Fidel</a> on May 22, 2012</div>
		<p>Hi Jack, don’t you think it would be a good idea to integrate a plugin for advance selectors in the js version? </p>
<p>Instead of doing (or looping):<br>
var photo1 = document.getElementById(“photo1″);<br>
var photo2 = document.getElementById(“photo2″);<br>
…<br>
you could select:<br>
var photos = …(“#photoContainer img”);<br>
…</p>
<p>I know I could just use jQuery but why use such a framework when you just want to animate.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on May 24, 2012</div>
		<p>Fidel, while it may seem like a good idea on the surface to have GreenSock have its own selector, I really don’t think it’s necessary and it could make things more convoluted. There are scores of selectors to choose from (jQuery being the most popular, but there are smaller ones like sizzle, zepto, etc.) and I don’t see a huge need for innovation on that front. In the animation space, the need was very clear, but not so with selectors. No need to reinvent the wheel (from what I can see right now at least). </p>
<p>I’m considering integrating a simple document.getElementById() lookup if you pass a string as the target of the tween – what do you think of that idea? It does impose a slight speed penalty but it would be pretty convenient for just snagging things by id.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://functionscopedev.wordpress.com/2012/05/25/greensock-shows-off-a-super-fast-animation-engine/" rel="external nofollow" class="url">GreenSock shows off a super fast animation engine | FunctionSource Development</a> on May 25, 2012</div>
		<p>[...] out the JavaScript guide and get [...]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.liasoe.fr/flash" rel="external nofollow" class="url">Elias</a> on May 30, 2012</div>
		<p>HOLLY JESUS !<br>
SWEET HOLLY *@!# !<br>
HO MY LORD !</p>
<p>I just passed 3 hours at work tryin it.. instead of workin… -_-</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.martinlindelof.com/" rel="external nofollow" class="url">Martin Lindelöf</a> on June 1, 2012</div>
		<p>nice! anyone know if there’s a DistortImage to JS, like the one i Sandy3d for flash. for free image transform?</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on June 1, 2012</div>
		<p>I’m not aware of any, Martin, no.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://serenitystudio.de/" rel="external nofollow" class="url">Fidel</a> on June 4, 2012</div>
		<p>@Martin Have you checked out three.js? It is capable of drawing your seen to HTML 5′s canvas, WebGL or SVG.<br>
Demo: <a href="http://lab.aerotwist.com/webgl/surface/" rel="nofollow">http://lab.aerotwist.com/webgl/surface/</a><br>
Site: <a href="http://www.aerotwist.com/tutorials/getting-started-with-three-js/" rel="nofollow">http://www.aerotwist.com/tutorials/getting-started-with-three-js/</a></p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.witnesstochange.co.uk/" rel="external nofollow" class="url">Shaun</a> on June 19, 2012</div>
		<p>Do you know if you are able to Tween specific margins, such as margin-top, margin-left. etc. ?</p>
<p>Thanks</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by rajni on June 19, 2012</div>
		<p>Great Works.</p>
<p>Many Many Thanks.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on June 19, 2012</div>
		<p>Absolutely, Shaun, you can tween any individual margin. Just use the camelCase syntax like everything else:</p>
<p>TweenLite.to(element, 1, {css:{marginTop:”20px”, marginLeft:”100px”}});</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by zimo on July 11, 2012</div>
		<p>awesome!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://eduardodacosta.net/" rel="external nofollow" class="url">Eduardo</a> on July 16, 2012</div>
		<p>Once again… Thank you. I never could pay you enough!<br>
Cheers.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by James on July 27, 2012</div>
		<p>Why this didn’t come out a long time ago I don’t know but this is the mutts nuts, well done!</p>
<p>I have tested it in IE7 of course and it’s not worth the awesomeness of Greensock so if there is an impolite way of excluding IE from this awesomeness, let it be known. I suppose and  conditional JS file would do the trick?</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://vane.co.za/how-to-install-greensock-javascript-hanimation-library/" rel="external nofollow" class="url">How to install Greensock Javascript H(animation) library into WordPress | vane.co.za</a> on August 1, 2012</div>
		<p>[...] that is just the tip of the proverbial iceberg! You can do so much more with the &nbsp;TweenMax and TweenMin if you take a little bit of time to learn t….   This entry was posted in Uncategorized by James. Bookmark the [...]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://dipockdas.com/" rel="external nofollow" class="url">DIPOCK</a> on September 10, 2012</div>
		<p>Goody gumdrops ! Can’t wait to try this on my mobile apps. I’ve used your AS libraries in the past so can’t wait to give the JS version a whirl. Thanks !!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://blog.bebensiganteng.com/?p=733" rel="external nofollow" class="url">WebGL Experimentation | The Daily Muse of Super Geek</a> on September 30, 2012</div>
		<p>[...] My first experiment with WebGL, using Three.js and Tweenlite. [...]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://ahrengot.com/tutorials/greensock-javascript-animation/" rel="external nofollow" class="url">Tutorial: JavaScript animation with TweenMax</a> on September 30, 2012</div>
		<p>[...] Getting started with TweenMax [...]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Vinicius on October 5, 2012</div>
		<p>there is a {delay:1} like in as3?</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on October 5, 2012</div>
		<p>Absolutely, the API is virtually identical to the ActionScript version and that includes the “delay” special property. Just remember not to put it inside the css:{} object. </p>
<p>TweenLite.to(element, 2, {css:{left:100}, delay:1});</p>
<p>Happy tweening!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Vinicius on October 5, 2012</div>
		<p>thanks bro, you are awesome. Good job and still being fantastic like you are.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.cowcrossing.com/" rel="external nofollow" class="url">Mark Mun</a> on November 9, 2012</div>
		<p>Is the syntax on this page out of date?</p>
<p>It says:<br>
TweenLite.to(photo, 1.5, {width:100, height:200});</p>
<p>When it should be:<br>
TweenLite.to(photo, 1.5, {css:{width:100, height:200}});</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on November 9, 2012</div>
		<p>Nope, that’s not outdated – it’s perfectly valid for <img> elements because they have native width and height properties that can be tweened. We were trying to make the point that TweenLite can tween ANY numeric property of ANY object. However, we tried to point out quickly thereafter that almost all other properties of HTML elements should be tweened via the CSSPlugin. Sorry if that wasn’t clear enough. A lot of people are wanting to tween non-DOM stuff these days like objects inside a canvas and those wouldn’t need the CSSPlugin.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Marquis Howard on November 20, 2012</div>
		<p>I am very impressed with your work! I am interested in your js library and tool-set. I will go through your tutorials to get a feel for your product.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.cihataykas.com/" rel="external nofollow" class="url">Zifozi</a> on December 10, 2012</div>
		<p>Just awesome!<br>
Thanks a lot for all of libs.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.jayyaowebdesign.com/create-javascript-animation-with-gsap-js/" rel="external nofollow" class="url">Create JavaScript Animation with "GSAP JS" - Doggie Wears Glassie</a> on December 13, 2012</div>
		<p>[...] Getting Started with GSAP JS [...]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by George Jefferson on December 28, 2012</div>
		<p>I can’t believe how simple you made this quantum mechanics equation sound. This is the most complicated how-to I’ve ever come across. I have the jquery link in my , placed the js file in my directory, provided a link the js file it in my html file, after that, it’s quantum entanglement. A video tutorial would help a lot.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on December 28, 2012</div>
		<p>George, have you checked out the Jump Start? I think you’ll find it much easier and faster to get up to speed. In many ways it’s even better than a video because it lets you move at your own pace and play and experiment with various selections, look at the code, etc. <a href="http://www.greensock.com/jump-start-js/" rel="nofollow">http://www.greensock.com/jump-start-js/</a></p>
<p>Lee Brimelow did a nice little video, and there are several other good resources all linked to from the main GSAP JS page at <a href="http://www.greensock.com/gsap-js/" rel="nofollow">http://www.greensock.com/gsap-js/</a></p>
<p>I realize this “Getting Started” guide can be a little overwhelming which is why we did the Jump Start. The reality is that a lot of people are hungry for detailed information and we want to provide that while at the same time not forcing everyone to read lengthy articles if they just want the basics. In fact, this article doesn’t even scratch the surface of all the advanced features in the platform. Carl is working on the 500-page “advanced” book now (just kidding).</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack Hu on January 9, 2013</div>
		<p>Dose the GreenSock Animation Platform (GSAP) has any tools like Adobe Edge Animate?</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on January 9, 2013</div>
		<p>GSAP works with Adobe Edge Animate, yes, but it is not intended to do the same thing. Adobe Edge Animate is an IDE whereas GSAP is a high-performance scripted animation platform. You can build assets visually in EA and then control them using GSAP. Chris Gannon has lots of examples at <a href="http://chrisgannon.wordpress.com/" rel="nofollow">http://chrisgannon.wordpress.com/</a></p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Sven on January 16, 2013</div>
		<p>Is it possible to integrate GSAP into win8 apps?</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on January 16, 2013</div>
		<p>I don’t see why not, Sven. We haven’t done it ourselves, but from what we’ve heard Win8 apps are very JavaScript-friendly. GSAP should work great. Let us know if you discover otherwise.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.akwebgenius.com/blog" rel="external nofollow" class="url">Stacey Reiman</a> on February 6, 2013</div>
		<p>Hello Sven – yes it’s definitely possible to use Greensock in your Win8 apps, I have 2 apps in the store right now that both use Greensock.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Faks on February 9, 2013</div>
		<p>Guys, your work is really, really, really impressive.<br>
I used your class in Flash since one year, I won hours of code thanks to you.<br>
This week I started a new Html/JS project and I decided to try your GSAP class. It’s just perfect ! Exactly the same syntax as in Flash… really intuitive… really easy… really cool ! I will definitely forget about jQuery for stuff related to animation and Css transitions.</p>
<p>To every Flash/Html/JS/Css developer, don’t hesitate, try Greensock class right now <img src="./examples_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<p>Thanks a lot !</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by steve on February 25, 2013</div>
		<p>Hi All</p>
<p>Quite new to mobile design but have been experimenting on my HTC Android – dunno if its maybe something Im doing wrong, or if anyone else has had similar performance issues on mobile, but neither Edge Animate nor GSAP work very well – animations are terribly jerky and slow – have also tried using HTML Canvas exported from Flash with EaselJS plugin and much much better performance</p>
<p>Id so love Greensock to work well on mobile as Ive used the AS3 version for Flash a lot in the past, but so far Im not having much joy. Can anyone shed any light or offer any tips?</p>
<p>Kind regards</p>
<p>Steve</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on February 25, 2013</div>
		<p>Hey Steve. GSAP vs. DOM is actually a false dichotomy. They work great together. It sounds like the issue you’re running into has nothing to do with the animation engine, but rather the graphics rendering speed of the browser itself and differences between canvas and DOM rendering. GSAP might set an element’s styles/properties in 1 millisecond, but it could take the browser 100 milliseconds (or more) to actually render it there graphically. </p>
<p>It’s much easier for canvas to render certain types of things (huge images or lots of little layered assets) and yet it can be much slower for other types of things. It is definitely not universally faster – it’s very device-dependent and browser-specific. For example, in older browsers canvas was horribly slow compared to straight-up DOM element animation, but in recent years browsers have focused a lot on improving it. You might find that canvas is much faster on Android but much slower than DOM element animation in iOS or a specific browser. </p>
<p>GSAP itself is highly optimized, and you can see how it compares to other animation frameworks (including EaselJS’s TweenJS which you mentioned) here: <a href="http://www.greensock.com/js/speed.html" rel="nofollow">http://www.greensock.com/js/speed.html</a>. </p>
<p>You can use GSAP to animate pretty much ANYTHING including canvas-based stuff. In fact, we’ve got an EaselPlugin that allows you to animate special properties in EaselJS that EaselJS’s own animation engine doesn’t offer. I’m pretty sure GSAP is faster too. </p>
<p>So again, GSAP vs. canvas is a false dichotomy. It should be canvas vs. DOM. Or you could compare GSAP and TweenJS. My understanding is that Edge Animate uses DOM rather than canvas. </p>
<p>If you noticed that canvas is working much better for you, my advice would be to use canvas with GSAP if you want the best speed. </p>
<p>I hope that helps.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://worthwhile.com/" rel="external nofollow" class="url">Jason</a> on March 3, 2013</div>
		<p>Just Awesome! I’ve used the AS version extensively for the past 6 years and really look forward to implementing this in a project.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by eburnett on March 17, 2013</div>
		<p>I believe I found my absolute favorite of the year <img src="./examples_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://johndoesdesign.com/" rel="external nofollow" class="url">John</a> on March 18, 2013</div>
		<p>How do more people not use this!?  Been using jQuery animate and CSS3 transitions up until now but this is just WAY better!  Looking forward to using it on all future projects!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Michael on March 27, 2013</div>
		<p>AMAZING !</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://marxinfo.com/" rel="external nofollow" class="url">inozemcev</a> on April 25, 2013</div>
		<p>Hello Greensock team, love you so much. I want to make image onMouseOver event became black and white. As far as I understand I can not use colorMatrixFilter as in actionscript. Does your library have an alternative like сss filters or something like this?</p>
<p>And thank you so much for your lib. You are an extremely progressive team.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by Jack on April 25, 2013</div>
		<p>inozemcev, the browser vendors haven’t decided on a common way to apply filters like that (for saturation, brightness, contrast, etc.) but you can use a canvas library for that kind of thing, like EaselJS (<a href="http://createjs.com/#!/EaselJS" rel="nofollow">http://createjs.com/#!/EaselJS</a>). You’ll definitely want to use our EaselPlugin for animating it because I don’t think you can do it directly with EaselJS’s own tool set (at least not easily last time I checked). As long as you’ve loaded TweenLite and our EaselPlugin (plus the necessary EaselJS stuff of course), you can do this:</p>
<p>TweenLite.to(yourEaselObject, 1, {easel:{saturation:0}});</p>
<p>It can also affect “contrast”, “brightness”, “exposure”, and more. See the <a href="http://api.greensock.com/js/com/greensock/plugins/EaselPlugin.html" rel="nofollow">docs</a> for more info.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://johnpolacek.com/2013/06/29/open-source-your-code-for-fame-and-fortune/" rel="external nofollow" class="url">Open Source Your Code For Fame and Fortune | John PolacekJohn Polacek</a> on June 29, 2013</div>
		<p>[...] Animation Platform. If you know what you are doing in Greensock, and understand how to build a Timeline animation, then you will find it super easy to use. It is a bit time intensive, as you have to handcode a lot [...]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://lelandkwong.com/" rel="external nofollow" class="url">Leland</a> on July 1, 2013</div>
		<p>This is top notch work!</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://www.photogabble.co.uk/" rel="external nofollow" class="url">Simon</a> on August 21, 2013</div>
		<p>I had been made aware of this tool, just this-morning and it has helped fix a lot of problems with our on screen animations. Thank you so much for making it available.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://schless.net/" rel="external nofollow" class="url">glimmerwigg</a> on November 10, 2013</div>
		<p>Amigo, this is some amazingly awesome stuff. I doff my hat and bow.</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->
	<div class="comment-top"><span></span></div>
	
	<div class="comment-mid">
		<div class="comment-meta">Posted by <a href="http://onedayitwillmake.com/blog/2013/12/using-greensock-js-tweenmax-in-a-dart-application/" rel="external nofollow" class="url">Using Greensock JS / TweenMax in a Dart application » Onedayitwillmake</a> on December 29, 2013</div>
		<p>[…] you use Greensock / TweenMax / TweenLite, you don’t really want to use anything else. It’s fast, it’s feature rich, and it […]</p>
	</div>
	<div class="comment-bottom"><span></span>
	
	</div><!-- #comment-## -->

<div class="comment-form">
	<form action="http://www.greensock.com/wp-comments-post.php" method="post" id="commentform">
	
	
	<p><input type="text" name="author" id="author" value="" size="22" tabindex="1" aria-required="true">
	<label for="author">Name (required)</label></p>
	
	<p><input type="text" name="email" id="email" value="" size="22" tabindex="2" aria-required="true">
	<label for="email">Email (will not be published) (required)</label></p>
	
	<p><input type="text" name="url" id="url" value="" size="22" tabindex="3">
	<label for="url">Website</label></p>
	
	<!--<p><strong>XHTML:</strong> You can use these tags: <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>-->
	
	<p><textarea name="comment" id="comment" cols="100%" rows="10" tabindex="4"></textarea></p>
	
	<p><input name="submit" type="image" src="./examples_files/submit_comment_off.png" id="submit" tabindex="5" value="Submit Comment">
	<input type="hidden" name="comment_post_ID" value="2033" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
	</p>
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="23714ae2b6"></p>	
	</form>

</div>		</div>
	</div>
</div>

	</div>

	<div class="drop-shadow-right" style="height: 23893.5px;"><span></span></div>
	<div style="clear:both;"><span></span></div>

</div>

<div class="drop-shadow-bottom-container">
	<div class="drop-shadow-bottom-left"><span></span></div>
	<div class="drop-shadow-bottom"><span></span></div>
	<div class="drop-shadow-bottom-right"><span></span></div>
</div>
<div style="clear:both"><span></span></div>
<div class="footer">
	© 2013, GreenSock, Inc. | <a href="http://www.greensock.com/terms_of_use.html" target="_blank">terms of use</a> | <a href="mailto:info@greensock.com">info@greensock.com</a>
</div>



<div id="dl_GSAP" style="visibility: hidden; -webkit-transform-origin: 50% 20% 0px; display: none; opacity: 0;">
	<div id="dl_left">
		<p>By using GreenSock code, you agree to the <a href="http://www.greensock.com/terms_of_use.html" target="_blank">terms of use</a>.</p>
		<img src="./examples_files/dl_divider.gif">
		<h2 id="dl_emailHeader">Stay up to date</h2>
		<p id="dl_emailBody">Join our email list and stay informed. Don't be shy. We'll keep your data private. Unsubscribe anytime.</p>
		<form id="dl_emailSignup">
			<input id="dl_email" class="gsInputText clearDefault" type="text" value="email address">
			<button id="dl_joinBtn" class="gsBtn"><span>JOIN</span></button>
		</form>
		<img src="./examples_files/dl_divider.gif">
		<h2>Club GreenSock Member?</h2>
		<p>To get your bonus plugins and other membership benefits, <a href="http://www.greensock.com/account/">log into your GreenSock account</a>.</p>
		<p>Learn more about <a href="http://www.greensock.com/club/">Club GreenSock</a> and <a href="http://www.greensock.com/licensing/">licensing</a>.</p>
	</div>
	<div id="dl_right">
		<div id="dl_flavors" style="height: 440px;">
			<div id="dl_tabJS" class="dl_tab" style="background-color: rgb(0, 51, 204); visibility: inherit; opacity: 1; height: 38px; padding-top: 0px; -webkit-transform: matrix(1, 0, 0, 1, 0, 0);">JavaScript<div class="dl_flavorInitials">JS</div></div>
			<div id="dl_tabAS3" class="dl_tab" style="background-color: rgb(176, 0, 0); visibility: inherit; opacity: 0.65; height: 38px; padding-top: 0px; -webkit-transform: matrix(1, 0, 0, 1, 0, 0);">ActionScript 3<div class="dl_flavorInitials">AS3</div></div>
			<div id="dl_tabAS2" class="dl_tab" style="background-color: rgb(204, 82, 0); visibility: inherit; opacity: 0.65; height: 38px; padding-top: 0px; -webkit-transform: matrix(1, 0, 0, 1, 0, 0);">ActionScript 2<div class="dl_flavorInitials">AS2</div></div>
			<div id="dl_pickFlavor" style="opacity: 0; visibility: hidden; -webkit-transform: matrix(1.4, 0, 0, 1.4, 0, 0);">Pick your flavor</div>
		</div>
		<div id="dl_panelJS" class="dl_panel" style="visibility: inherit; opacity: 1; -webkit-transform-origin: 50% 50% 0px;">
			<div id="dl_panelJSInner">
				<div class="dl_version">Core version <strong>1.11.3</strong> updated <span>2014-01-10</span></div>
				<a href="http://www.greensock.com/dl/greensock-v12-js.zip"><span class="dl_type dl_typeBtn"><img src="./examples_files/dl_download_arrow.png" alt="Download zip"> Download zip </span></a>
				<a href="http://www.github.com/greensock/GreenSock-JS/" target="_blank"><span class="dl_type dl_typeBtn"><img src="./examples_files/dl_git_icon.png" alt="github"> github </span></a>
				<div id="dl_cdn">
					<img class="dl_cdnDivider" src="./examples_files/dl_divider.gif" width="148" height="2">
					<span class="dl_type"><img src="./examples_files/dl_cdn_icon.png" alt="CDN link"> CDN link </span>
					<img class="dl_cdnDivider" src="./examples_files/dl_divider.gif" width="148" height="2">

					<div class="dl_small">Copy/paste this code into your HTML:</div>
					<div id="dl_cdnCode">&lt;script src="http://cdnjs.cloudflare.com/ajax/libs/gsap/1.11.3/TweenMax.min.js"&gt;&lt;/script&gt;</div>
					<form id="dl_cdnForm" style="-webkit-perspective: 600px;">
						<ul>
							<li id="dl_cdnVersion_li"><label>Version: <select id="dl_cdnVersion" name="cdnVersion">
								<option value="latest">latest</option>
							<option value="1.11.3" selected="selected">1.11.3</option><option value="1.11.2">1.11.2</option><option value="1.11.1">1.11.1</option><option value="1.11.0">1.11.0</option><option value="1.10.3">1.10.3</option><option value="1.10.2">1.10.2</option><option value="1.10.1">1.10.1</option><option value="1.10.0">1.10.0</option><option value="1.9.8">1.9.8</option><option value="1.9.7">1.9.7</option><option value="1.9.6">1.9.6</option><option value="1.9.5">1.9.5</option><option value="1.9.4">1.9.4</option><option value="1.9.3">1.9.3</option><option value="1.9.2">1.9.2</option><option value="1.9.1">1.9.1</option><option value="1.9.0">1.9.0</option><option value="1.8.4">1.8.4</option><option value="1.8.3">1.8.3</option><option value="1.8.2">1.8.2</option><option value="1.8.1">1.8.1</option></select></label>
							</li>
							<li id="dl_robustArea"><label><input id="dl_cdnRobust" name="cdnGroup" value="robust" type="radio" checked="">&nbsp;Robust</label></li>
							<li id="dl_lightweightArea"><label><input id="dl_cdnLightweight" name="cdnGroup" value="lightweight" type="radio"> Lightweight</label></li>
							<li id="dl_customizeArea"><label><input id="dl_cdnCustomize" name="cdnGroup" value="customize" type="radio"> Customize <img src="./examples_files/dl_arrow_small.png"></label></li>
						</ul>
						<div class="dl_cdnTooltip" id="dl_robustTooltip" style="visibility: hidden; opacity: 0; -webkit-transform: matrix3d(1, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 15, 0, 1);">TweenMax includes all of the following in one file: TweenLite, TimelineLite, TimelineMax, CSSPlugin, EasePack, BezierPlugin, and RoundPropsPlugin.</div>
						<div class="dl_cdnTooltip" id="dl_lightweightTooltip" style="visibility: hidden; opacity: 0; -webkit-transform: matrix3d(1, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 15, 0, 1);">TweenLite, CSSPlugin, and EasePack deliver all the essentials in a small footprint</div>
						<div class="dl_cdnTooltip" id="dl_customizeTooltip" style="visibility: hidden; opacity: 0; -webkit-transform: matrix3d(1, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 0, 15, 0, 1);">Choose exactly the combination you want (dependencies and inclusions will automatically be selected for you)</div>
						<div id="dl_cdnOptions">
							<div class="dl_cdnOptionsColumn">
								<h3>Core</h3>
								<ul>
									<li class="dl_cdnCore"><label><input type="checkbox" name="TweenMax" value="TweenMax"> TweenMax <i>(29kb)</i></label></li>
									<li class="dl_cdnCore"><label><input type="checkbox" name="TweenLite" value="TweenLite"> TweenLite <i>(7kb)</i></label></li>
									<li class="dl_cdnCore"><label><input type="checkbox" name="TimelineMax" value="TimelineMax"> TimelineMax <i>(4kb)</i></label></li>
									<li class="dl_cdnCore"><label><input type="checkbox" name="TimelineLite" value="TimelineLite"> TimelineLite <i>(3kb)</i></label></li>
								</ul>
								<h3>Extras</h3>
								<ul>
									<li><label><input type="checkbox" name="EasePack" value="EasePack"> EasePack <i>(2kb)</i></label></li>
									<li><label><input type="checkbox" name="jqueryGSAP" value="jquery.gsap"> jquery.gsap.js <i>(1kb)</i></label></li>
                                <li><label><input type="checkbox" name="Draggable" value="Draggable"> Draggable <i>(2.5kb)</i></label></li>
								</ul>
							</div>
							<div class="dl_cdnOptionsColumn" id="dl_plugins">
								<h3>Plugins</h3>
								<ul>
                                    <li class="dl_cdnPluginShort"><label><input type="checkbox" name="CSSPlugin" value="CSSPlugin"> css <i>(12kb)</i></label></li>
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="CSSRulePlugin" value="CSSRulePlugin"> cssRule <i>(0.5kb)</i></label></li>
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="ScrollToPlugin" value="ScrollToPlugin"> scrollTo <i>(1kb)</i></label></li>
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="AttrPlugin" value="AttrPlugin"> attr <i>(0.5kb)</i></label></li>
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="BezierPlugin" value="BezierPlugin"> bezier <i>(4kb)</i></label></li>
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="EaselPlugin" value="EaselPlugin"> easel <i>(2kb)</i></label></li>
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="RaphaelPlugin" value="RaphaelPlugin"> raphael <i>(2kb)</i></label></li>
                                    <li class="dl_cdnPluginShort"><label><input type="checkbox" name="TextPlugin" value="TextPlugin"> text <i>(1kb)</i></label></li>
                                 <li class="dl_cdnPluginShort"><label><input type="checkbox" name="KineticPlugin" value="KineticPlugin"> kinetic <i>(2kb)</i></label></li> 
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="RoundPropsPlugin" value="RoundPropsPlugin"> roundProps <i>(1kb)</i></label></li>
									<li class="dl_cdnPluginShort"><label><input type="checkbox" name="ColorPropsPlugin" value="ColorPropsPlugin"> colorProps <i>(1kb)</i></label></li>
                                    <li class="dl_cdnPluginLong"><label><input type="checkbox" name="DirectionalRotationPlugin" value="DirectionalRotationPlugin"> directionalRotation <i>(1kb)</i></label></li>
								</ul>
							</div>
						</div>
					</form>
				</div>
			</div>
		</div>


		<div id="dl_panelAS3" class="dl_panel" style="visibility: hidden; opacity: 0;">
			<div class="dl_version">Core version <strong>12.1.2</strong> updated <span>2014-01-10</span></div>
			<a href="http://www.greensock.com/dl/greensock-v12-as3.zip"><span class="dl_type dl_typeBtn"><img src="./examples_files/dl_download_arrow.png" alt="Download zip"> Download zip </span></a><br>
			<a href="http://www.github.com/greensock/GreenSock-AS3/" target="_blank"><span class="dl_type dl_typeBtn"><img src="./examples_files/dl_git_icon.png" alt="github"> github </span></a>
		</div>

		<div id="dl_panelAS2" class="dl_panel" style="visibility: hidden; opacity: 0;">
			<div class="dl_version">Core version <strong>12.1.2</strong> updated <span>2014-01-10</span></div>
			<a href="http://www.greensock.com/dl/greensock-v12-as2.zip"><span class="dl_type dl_typeBtn"><img src="./examples_files/dl_download_arrow.png" alt="Download zip"> Download zip </span></a><br>
			<a href="http://www.github.com/greensock/GreenSock-AS2/" target="_blank"><span class="dl_type dl_typeBtn"><img src="./examples_files/dl_git_icon.png" alt="github"> github </span></a>
		</div>

	</div>
</div>


<script type="text/javascript" src="./examples_files/shCore.js"></script>
<script type="text/javascript" src="./examples_files/shBrushXml.js"></script>
<script type="text/javascript" src="./examples_files/shBrushJScript.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.greensock.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.greensock.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['auto-links'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.defaults['wrap-lines'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
/* <![CDATA[ */
var pollsL10n = {"ajax_url":"http:\/\/www.greensock.com\/wp-admin\/admin-ajax.php","text_wait":"Your last request is still being processed. Please wait a while ...","text_valid":"Please choose a valid poll answer.","text_multiple":"Maximum number of choices allowed: ","show_loading":"1","show_fading":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="./examples_files/polls-js.js"></script>
<!--stats_footer_test--><script src="./examples_files/e-201403.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({blog:'3391581',v:'ext',post:'2033'});
var load_cmc = function(){linktracker_init(3391581,2033,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
</script><img id="wpstats" src="./examples_files/g.gif" alt="">
<!--[if IE 7]>
	<script type="text/javascript">
		document.getElementById('main').style.top = '89px';
	</script>
<![endif]-->
<!--[if IE 6]>
	<script type="text/javascript">
		document.getElementById('main').style.top = '89px';
	</script>
<![endif]-->

<div id="terms" style="width: 650px; height: 384px;" class="termsWindow">

    <div class="termsTitle">To download the code, you must agree to the following license:</div>

        <div class="termsCopy">



<p>"NO CHARGE" NON-EXCLUSIVE SOFTWARE LICENSE AGREEMENT<br>

-----------------------------------------------------------------------------<br>

PLAIN ENGLISH SUMMARY:</p>

<ol>

	<li>You may use the code at no charge in commercial or non-commercial apps, web sites, games, components, and other software as long as end users are not charged a fee of any kind to use your product or gain access to any part of it. If your client pays you a one-time fee to create the site/product, that's perfectly fine and qualifies under the "no charge" license. If end users are charged a usage/access/license fee, please sign up for a <a href="http://www.greensock.com/club/" target="_blank">"Business Green" Club GreenSock</a> membership which comes with a comprehensive commercial license. See <a href="http://www.greensock.com/club/" target="_blank">http://www.greensock.com/club/</a> for details.</li>

	<li>Use at your own risk. No warranties are offered. </li>

	<li>Please respect the copyright. </li>

</ol>

<p>-----------------------------------------------------------------------------<br></p>



<p>LEGALESE:</p>



<p>This is a legal agreement between you (either an individual or a single entity) and GreenSock, Inc. ("GREENSOCK") for the proprietary GreenSock code known as TweenLite, TweenMax, TweenNano, TimelineLite, TimelineMax, and other copyrighted code that is available for download at <a href="http://www.greensock.com/" target="_blank">http://www.greensock.com</a> (this code and documentation, as well as any updates which may at GREENSOCK's sole discretion be provided to you from time to time, are referred to in this Agreement as "PROGRAM"). By downloading, copying, or otherwise using the PROGRAM, you agree to the terms and conditions of this Agreement. If you do not agree to the terms and conditions of this Agreement, please do not download or use the PROGRAM.</p>



<p>I. LICENSE<br>

A. Subject to the terms and conditions of this Agreement, GREENSOCK hereby grants you a non-exclusive, worldwide, non-transferable right to use the PROGRAM in apps, web sites, games, components and other software applications ("Developed Works") for which the end user is NOT charged any fees. If you would like to use the code in a commercially licensed Developed Work for which end users are charged a fee (either for usage or access), simply sign up for the appropriate <strong>"Business Green"</strong> Club GreenSock membership at <a href="http://www.greensock.com/club/" target="_blank">http://www.greensock.com/club/</a>.</p>



<p>II. LIMITATION OF LICENSE AND RESTRICTIONS <br>

A. You agree that you will not sell, rent, or license the PROGRAM's source code or any derivative works thereof to any third party without the prior written consent of GREENSOCK. Distribution of the PROGRAM as part of your Developed Work is acceptable so long as it is used exclusively as a part of your Developed Work. You agree not to modify or delete GREENSOCK'S existing copyright notices located in the source code.</p>

 

<p>B. You may use, duplicate, and distribute the compiled object code as embedded in Developed Works created by you, either for your own use or for distribution to a third party so long as end users of the Developed Work are not charged a fee for usage of or access to any portion of the Developed Work. Please see <a href="http://www.greensock.com/licensing/" target="_blank">http://www.greensock.com/licensing/</a> for descriptions of Developed Works that qualify for the "No Charge" license.</p>



<p>C. You may make modifications to the source code exclusively for your own use in order to perform bug fixes or other minor edits required to operate the PROGRAM as originally intended.</p>



<p>III. CONSIDERATION<br>

A. The license rights granted to you under this Agreement are at no charge, but only in the following circumstances: If on your own behalf or on behalf of a third party you incorporate the PROGRAM into a web site, app, game, program or any component thereof (collectively, "Developed Work"), which in the case of a web site, must be accessible to internet users without payment of a fee of any kind, and in the case of a software application, game, program or component, neither you nor anyone to whom you distribute the Developed Work charges a user a fee of any kind to use such Developed Work or application, game, program or component into which such Developed Work is embedded. The foregoing shall apply regardless of whether you are paid to create such Developed Work.</p>



<p>B. In the event your intended use of the PROGRAM does not meet the criteria for the "no charge" license rights set forth in the immediately preceding paragraph, then you are not licensed to use the PROGRAM under this Agreement and must license the PROGRAM under GREENSOCK'S separate fee-based Software License Agreement which is granted to "Business Green" Club GreenSock members (see <a href="http://www.greensock.com/club/" target="_blank">http://www.greensock.com/club/</a> for details).</p>



<p>C. You may make modifications to the source code exclusively for your own use in order to perform bug fixes or other minor edits required to operate the PROGRAM as originally intended.</p>



<p>IV. TITLE AND OWNERSHIP <br>

A. The PROGRAM is licensed, not sold, and is protected by copyright laws and international treaty provisions. You acknowledge that no title to the intellectual property in the PROGRAM is transferred to you. You further acknowledge that title and full ownership rights to the PROGRAM, including all intellectual property rights therein, will remain the exclusive property of GREENSOCK and you will not acquire any rights to the PROGRAM except as expressly set forth in this Agreement. You agree that any copies of the PROGRAM you make will contain the same proprietary notices which appear on and in the PROGRAM. You agree that GREENSOCK may identify you as a licensee unless you make a written request otherwise. GREENSOCK hereby grants to you the right to disclose that your product, game, software application, component, or other Developed Work makes use of GREENSOCK code (for example, "Powered by TweenLite").</p>



<p>V. DISCLAIMER OF WARRANTY AND LIMITATION OF LIABILITY <br>

A. THE PROGRAM IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. GREENSOCK DOES NOT WARRANT THAT THE FUNCTIONS CONTAINED IN THE PROGRAM WILL MEET YOUR REQUIREMENTS OR THAT OPERATION WILL BE UNINTERRUPTED OR ERROR FREE. GREENSOCK shall not be liable for special, indirect, incidental, or consequential damages with respect to any claim on account of or arising from this Agreement or use of the PROGRAM, even if GREENSOCK has been or is hereafter advised of the possibility of such damages. Because some states do not allow certain exclusions or limitations on implied warranties or of liability for consequential or incidental damages, the above exclusions may not apply to you. In no event, however, will GREENSOCK be liable to you, under any theory of recovery, in an amount in excess of $250. Notwithstanding anything else in this agreement, you agree to indemnify GREENSOCK, its assignees, and licensees, and hold each of them harmless from and against any and all claims, losses, damages, and expenses, including legal fees arising out of or resulting from any negligent act or omission by you. </p>



<p>B. GREENSOCK may, at its sole discretion, provide support services related to the PROGRAM, but has no obligation to do so.</p>



<p>VI. TERMINATION<br>

If you at any time fail to abide by the terms of this Agreement, GREENSOCK shall have the right to immediately terminate the license granted herein and pursue any other legal or equitable remedies available.</p>



<p>VII. MISCELLANEOUS <br>

A. This Agreement shall be construed in accordance with the laws of the State of Illinois. In the event of any dispute between you and GREENSOCK with respect to this Agreement, we both agree that if we cannot resolve the dispute in good faith discussion, either of us may submit the dispute for resolution to arbitration with the American Arbitration Association before a single arbitrator using the AAA Rules for Commercial Arbitration.  The arbitrator's decision is final and can be enforced in any court with jurisdiction over such matters. </p>



<p>B. This agreement represents the complete and exclusive statement of the agreement between GREENSOCK and you and supersedes all prior agreements, proposals, representations and other communications, verbal or written, between them with respect to use of the program. This agreement may be modified only with the mutual written approval of authorized representatives of the parties. </p>



<p>C. The terms and conditions of this Agreement shall prevail notwithstanding any different, conflicting, or additional terms or conditions which may appear in any purchase order or other document submitted by you. You agree that such additional or inconsistent terms are deemed rejected by GREENSOCK. </p>



<p>D. GREENSOCK and you agree that any xerographically or electronically reproduced copy of this Agreement shall have the same legal force and effect as any copy bearing original signatures of the parties.</p>



<p style="font-size:8px">Copyright 2006-2013, GreenSock, Inc. Updated 2012-08-28</p> 

	</div>

	<table border="0" width="100%"><tbody><tr><td valign="top"><input id="donate" type="checkbox" name="donate" value="1"> </td><td><div class="termsClub">I'd like to learn how to get bonus plugins, update notifications, SVN access, and more.</div></td>

	<td valign="top" align="right"><input type="submit" name="agree" value="  I Agree  " onclick="onAgreeTerms();" class="button"></td>

	<td valign="top" align="right"><input type="submit" name="disagree" value="I Disagree" onclick="onDisagree();" class="button"></td></tr></tbody></table>

</div>





<!-- LICENSE FORMS START -->

<div id="productpriceTerms" class="termsWindow" style="width: 650px; height: 375px;">

<div class="termsTitle">To continue, you must agree to the following license:</div>

<div class="termsCopy"></div>

<table border="0" width="100%">

<tbody>

<tr>

<td width="99%"></td>

<td width="1%" align="right" valign="top"><input class="agreeButton button" type="submit" value="I Agree" name="agree" style="margin:3px;"></td>

<td width="1%" align="right" valign="top"><input class="button" onclick="hideOverlay();" name="disagree" type="submit" value="I Disagree" style="margin:3px;"></td>

</tr>

</tbody></table>

</div>

<!-- LICENSE FORMS END -->

<script type="text/javascript" language="javascript">
	function onDisagree() {
		hideOverlay();
	}

	function onAgreeTerms() {
		window.location = downloadUrl;
		if (document.getElementById("donate").checked) {
			window.setTimeout(donate, 2000);
		}
		hideOverlay();
	}

	var downloadUrl;
	function onChooseDownload($url) {
		downloadUrl = $url;
		showOverlay('terms');
	}

	function donate() {
		window.location = "http://www.greensock.com/club/";
	}
	Shadowbox.init();
</script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-43392009-1', 'greensock.com');
  ga('send', 'pageview');
</script>


<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk

 Served from: www.greensock.com @ 2014-01-19 14:03:21 by W3 Total Cache --><div id="sb-container"><div id="sb-overlay"></div><div id="sb-wrapper"><div id="sb-title"><div id="sb-title-inner"></div></div><div id="sb-wrapper-inner"><div id="sb-body"><div id="sb-body-inner"></div><div id="sb-loading"><div id="sb-loading-inner"><span>loading</span></div></div></div></div><div id="sb-info"><div id="sb-info-inner"><div id="sb-counter"></div><div id="sb-nav"><a id="sb-nav-close" title="Close" onclick="Shadowbox.close()"></a><a id="sb-nav-next" title="Next" onclick="Shadowbox.next()"></a><a id="sb-nav-play" title="Play" onclick="Shadowbox.play()"></a><a id="sb-nav-pause" title="Pause" onclick="Shadowbox.pause()"></a><a id="sb-nav-previous" title="Previous" onclick="Shadowbox.previous()"></a></div></div></div></div></div><form id="gclp-frame-form" target="gclp-frame" method="post" style="display: none;"></form><div id="window-resizer-tooltip" style="display: block;"><a href="http://www.greensock.com/get-started-js/#" title="Edit settings" style="background-image: url(chrome-extension://kkelicaakdanhinjdeammmilcgefonfh/images/icon_19.png);"></a><span class="tooltipTitle">Window size: </span><span class="tooltipWidth" id="winWidth">1388</span> x <span class="tooltipHeight" id="winHeight">963</span><br><span class="tooltipTitle">Viewport size: </span><span class="tooltipWidth" id="vpWidth">1372</span> x <span class="tooltipHeight" id="vpHeight">807</span></div></body></html>